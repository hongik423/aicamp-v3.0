'use client'

import React, { useEffect, useState } from 'react';
import { useParams, useRouter } from 'next/navigation';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Download, ArrowLeft, FileText, Eye, Printer, Share2, BarChart3, Shield, CheckCircle, AlertCircle, Loader2, Monitor, Smartphone } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

interface DiagnosisResultPageProps {
  params: Promise<{ diagnosisId: string }>;
}

export default function DiagnosisResultPage({ params }: DiagnosisResultPageProps) {
  const router = useRouter();
  const { toast } = useToast();
  const [diagnosisId, setDiagnosisId] = useState<string>('');
  const [reportContent, setReportContent] = useState<string>('');
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string>('');
  const [isAuthorized, setIsAuthorized] = useState<boolean | null>(null);
  const [authLoading, setAuthLoading] = useState(true);
  const [downloadLoading, setDownloadLoading] = useState(false);
  const [reportInfo, setReportInfo] = useState<any>(null);

  useEffect(() => {
    const loadParams = async () => {
      const resolvedParams = await params;
      setDiagnosisId(resolvedParams.diagnosisId);
    };
    loadParams();
  }, [params]);

  useEffect(() => {
    if (diagnosisId) {
      verifyAccess();
    }
  }, [diagnosisId]);

  const verifyAccess = async () => {
    try {
      setAuthLoading(true);
      console.log('üîê V26.0 n8n Enhanced ÏßÑÎã® Í≤∞Í≥º Ï†ëÍ∑º Í∂åÌïú Í≤ÄÏ¶ù:', diagnosisId);
      
      const response = await fetch('/api/diagnosis-auth', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          diagnosisId: diagnosisId,
          accessType: 'user'
        })
      });

      // ÏùëÎãµ ÏÉÅÌÉú ÌôïÏù∏
      if (!response.ok) {
        throw new Error(`Í∂åÌïú Í≤ÄÏ¶ù Ïã§Ìå®: ${response.status} ${response.statusText}`);
      }

      // ÏùëÎãµ ÌÖçÏä§Ìä∏ ÌôïÏù∏ ÌõÑ JSON ÌååÏã±
      const responseText = await response.text();
      if (!responseText) {
        throw new Error('Îπà ÏùëÎãµÏùÑ Î∞õÏïòÏäµÎãàÎã§.');
      }

      let result;
      try {
        result = JSON.parse(responseText);
      } catch (parseError) {
        console.error('‚ùå JSON ÌååÏã± Ïò§Î•ò:', parseError, 'ÏùëÎãµ ÌÖçÏä§Ìä∏:', responseText);
        throw new Error('ÏÑúÎ≤Ñ ÏùëÎãµ ÌòïÏãùÏù¥ Ïò¨Î∞îÎ•¥ÏßÄ ÏïäÏäµÎãàÎã§.');
      }
      
      if (result.success) {
        console.log('‚úÖ Ï†ëÍ∑º Í∂åÌïú ÌôïÏù∏Îê®');
        setIsAuthorized(true);
        loadReportData();
      } else {
        console.warn('‚ùå Ï†ëÍ∑º Í∂åÌïú ÏóÜÏùå:', result.error);
        setIsAuthorized(false);
        setError(result.error || 'ÏßÑÎã® Í≤∞Í≥ºÏóê Ï†ëÍ∑ºÌï† Í∂åÌïúÏù¥ ÏóÜÏäµÎãàÎã§.');
      }
      
    } catch (error: any) {
      console.error('‚ùå Í∂åÌïú Í≤ÄÏ¶ù Ïò§Î•ò:', error);
      setIsAuthorized(false);
      setError(error.message || 'Í∂åÌïú Í≤ÄÏ¶ù Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
    } finally {
      setAuthLoading(false);
    }
  };

  const loadReportData = async () => {
    try {
      setLoading(true);
      console.log('üìÑ V26.0 n8n Enhanced Î≥¥Í≥†ÏÑú Î°úÎìú - ÏóÖÎ°úÎìú Ïã§Ìå® Î¨∏Ï†ú Ìï¥Í≤∞:', diagnosisId);
      
      // V27.0 Ultimate: Ìï≠ÏÉÅ APIÏóêÏÑú ÏµúÏã† Ïã§Ï†ú Ï†êÏàò Î∞òÏòÅ Î≥¥Í≥†ÏÑú Î°úÎìú
      console.log('üîÑ V27.0 Ultimate: APIÏóêÏÑú Ïã§Ï†ú Ï†êÏàò Î∞òÏòÅ Î≥¥Í≥†ÏÑú Î°úÎìú ÏãúÏûë');
      
      // APIÏóêÏÑú Î≥¥Í≥†ÏÑú Ï°∞Ìöå (Í∞úÏÑ†Îêú Ïò§Î•ò Ï≤òÎ¶¨)
      const response = await fetch(`/api/diagnosis-reports/${diagnosisId}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
        // ÌÉÄÏûÑÏïÑÏõÉ ÏÑ§Ï†ï
        signal: AbortSignal.timeout(15000) // 15Ï¥à ÌÉÄÏûÑÏïÑÏõÉ
      });

      if (!response.ok) {
        throw new Error(`Î≥¥Í≥†ÏÑú Î°úÎìú Ïã§Ìå®: ${response.status} ${response.statusText}`);
      }

      // ÏùëÎãµ ÌÖçÏä§Ìä∏ ÌôïÏù∏ ÌõÑ JSON ÌååÏã±
      const responseText = await response.text();
      if (!responseText) {
        throw new Error('Îπà ÏùëÎãµÏùÑ Î∞õÏïòÏäµÎãàÎã§.');
      }

      let result;
      try {
        result = JSON.parse(responseText);
      } catch (parseError) {
        console.error('‚ùå JSON ÌååÏã± Ïò§Î•ò:', parseError, 'ÏùëÎãµ ÌÖçÏä§Ìä∏:', responseText);
        throw new Error('ÏÑúÎ≤Ñ ÏùëÎãµ ÌòïÏãùÏù¥ Ïò¨Î∞îÎ•¥ÏßÄ ÏïäÏäµÎãàÎã§.');
      }
      
      if (result.success && result.htmlReport) {
        console.log('‚úÖ V25.5 Î≥¥Í≥†ÏÑú Î°úÎìú Ïã§Ìå® Ìï¥Í≤∞ - Î≥¥Í≥†ÏÑú Î°úÎìú ÏÑ±Í≥µ');
        setReportContent(result.htmlReport);
        setReportInfo(result.reportInfo);
        setError('');
        
        // Î°úÏª¨ Ïä§ÌÜ†Î¶¨ÏßÄÏóê Î≥¥Í≥†ÏÑú Ï†ÄÏû•
        try {
          const localReportKey = `diagnosis_report_${diagnosisId}`;
          localStorage.setItem(localReportKey, result.htmlReport);
          console.log('‚úÖ Î≥¥Í≥†ÏÑú Î°úÏª¨ Ï†ÄÏû• ÏôÑÎ£å');
        } catch (storageError) {
          console.warn('‚ö†Ô∏è Î°úÏª¨ Ï†ÄÏû• Ïã§Ìå®:', storageError);
        }
      } else {
        throw new Error(result.error || 'Î≥¥Í≥†ÏÑúÎ•º Î∂àÎü¨Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§.');
      }
      
    } catch (error: any) {
      console.error('‚ùå V27.0 Ultimate 35ÌéòÏù¥ÏßÄ Î≥¥Í≥†ÏÑú Î°úÎìú Ïò§Î•ò:', error);
      
      // Ïò§Î•ò Î©îÏãúÏßÄ Í∞úÏÑ†
      let errorMessage = 'Î≥¥Í≥†ÏÑúÎ•º Î∂àÎü¨Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.';
      
      if (error.name === 'AbortError') {
        errorMessage = 'Î≥¥Í≥†ÏÑú Î°úÎìú ÏãúÍ∞ÑÏù¥ Ï¥àÍ≥ºÎêòÏóàÏäµÎãàÎã§. Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.';
      } else if (error.message.includes('404')) {
        errorMessage = 'Ìï¥Îãπ ÏßÑÎã® Í≤∞Í≥ºÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§. ÏßÑÎã®IDÎ•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.';
      } else if (error.message.includes('500')) {
        errorMessage = 'ÏÑúÎ≤Ñ Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.';
      } else if (error.message.includes('JSON')) {
        errorMessage = 'Î≥¥Í≥†ÏÑú Îç∞Ïù¥ÌÑ∞ ÌòïÏãù Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.';
      }
      
      setError(errorMessage);
      
      // Ìè¥Î∞±: Í∏∞Î≥∏ Î≥¥Í≥†ÏÑú ÏÉùÏÑ± ÏãúÎèÑ
      try {
        console.log('üîÑ Ìè¥Î∞±: Í∏∞Î≥∏ Î≥¥Í≥†ÏÑú ÏÉùÏÑ± ÏãúÎèÑ');
        const fallbackReport = generateFallbackReport(diagnosisId);
        setReportContent(fallbackReport);
        setReportInfo({
          diagnosisId,
          fileName: `AIÏó≠ÎüâÏßÑÎã®Î≥¥Í≥†ÏÑú_${diagnosisId}_FALLBACK.html`,
          createdAt: new Date().toISOString(),
          version: 'V27.0-ULTIMATE-35PAGE-FALLBACK',
          reportGenerated: true,
          Ìè¥Î∞±ÏãúÏä§ÌÖú: true
        });
        setError('Í∏∞Î≥∏ Î≥¥Í≥†ÏÑúÍ∞Ä ÌëúÏãúÎê©ÎãàÎã§.');
      } catch (fallbackError) {
        console.error('‚ùå Ìè¥Î∞± Î≥¥Í≥†ÏÑú ÏÉùÏÑ± Ïã§Ìå®:', fallbackError);
        setError('Î≥¥Í≥†ÏÑúÎ•º ÏÉùÏÑ±Ìï† Ïàò ÏóÜÏäµÎãàÎã§. Í¥ÄÎ¶¨ÏûêÏóêÍ≤å Î¨∏ÏùòÌï¥Ï£ºÏÑ∏Ïöî.');
      }
    } finally {
      setLoading(false);
    }
  };

  // V27.0 Ultimate 35ÌéòÏù¥ÏßÄ Ìè¥Î∞± Î≥¥Í≥†ÏÑú ÏÉùÏÑ± Ìï®Ïàò
  const generateFallbackReport = (diagnosisId: string): string => {
    const fallbackData = {
      diagnosisId,
      companyInfo: {
        name: 'Ìè¥Î∞±Í∏∞ÏóÖ',
        industry: 'IT/ÏÜåÌîÑÌä∏Ïõ®Ïñ¥',
        size: 'Ï§ëÏÜåÍ∏∞ÏóÖ',
        revenue: '10-50Ïñµ',
        employees: '50-100Î™Ö'
      },
      responses: {},
      scores: {
        total: 158,
        percentage: 70,
        categoryScores: {
          businessFoundation: 25,
          currentAI: 20,
          organizationReadiness: 30,
          technologyInfrastructure: 28,
          dataManagement: 25,
          humanResources: 30
        }
      },
      timestamp: new Date().toISOString()
    };
    
    // 35ÌéòÏù¥ÏßÄ Î≥¥Í≥†ÏÑú ÏÉùÏÑ± (ÎèôÏ†Å import ÎåÄÏã† ÏßÅÏ†ë ÏÉùÏÑ±)
    return generateUltimate35PageFallback(fallbackData);
  };
  
  // V27.0 Ultimate 35ÌéòÏù¥ÏßÄ Ìè¥Î∞± ÏÉùÏÑ±Í∏∞
  const generateUltimate35PageFallback = (data: any): string => {
    return `<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Ïó≠ÎüâÏßÑÎã® Î≥¥Í≥†ÏÑú V27.0 Ultimate - ${data.diagnosisId}</title>
    <style>
        body { font-family: 'Pretendard', sans-serif; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); margin: 0; padding: 20px; }
        .container { max-width: 1200px; margin: 0 auto; background: white; border-radius: 20px; padding: 40px; }
        .header { text-align: center; margin-bottom: 40px; border-bottom: 3px solid #667eea; padding-bottom: 20px; }
        .title { font-size: 2.5rem; color: #2d3748; margin-bottom: 10px; }
        .subtitle { font-size: 1.2rem; color: #667eea; }
        .score-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin: 30px 0; }
        .score-item { text-align: center; padding: 25px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 12px; }
        .score-value { font-size: 2.5rem; font-weight: 700; margin-bottom: 5px; }
        .score-label { font-size: 0.9rem; opacity: 0.9; }
        .version-badge { position: fixed; top: 20px; left: 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 8px 16px; border-radius: 20px; font-size: 12px; font-weight: 600; z-index: 1000; }
    </style>
</head>
<body>
    <div class="version-badge">V27.0 Ultimate Fallback</div>
    <div class="container">
        <div class="header">
            <h1 class="title">${data.companyInfo.name}</h1>
            <h2 class="subtitle">AI Ïó≠ÎüâÏßÑÎã® Î≥¥Í≥†ÏÑú V27.0 Ultimate (Ìè¥Î∞±)</h2>
            <p>ÏßÑÎã®ID: ${data.diagnosisId}</p>
            <p>ÏÉùÏÑ±ÏùºÏãú: ${new Date(data.timestamp).toLocaleString('ko-KR')}</p>
        </div>
        <div class="score-grid">
            <div class="score-item">
                <div class="score-value">${data.scores.total}</div>
                <div class="score-label">Ï¥ùÏ†ê</div>
            </div>
            <div class="score-item">
                <div class="score-value">${data.scores.percentage}%</div>
                <div class="score-label">AI Ï§ÄÎπÑÎèÑ</div>
            </div>
            <div class="score-item">
                <div class="score-value">B+</div>
                <div class="score-label">Îì±Í∏â</div>
            </div>
            <div class="score-item">
                <div class="score-value">AI ÏÑ±Ïû•Í∏∞ÏóÖ</div>
                <div class="score-label">ÏÑ±ÏàôÎèÑ</div>
            </div>
        </div>
        <div style="background: #fff3cd; padding: 20px; border-radius: 12px; margin: 20px 0; border-left: 5px solid #ffc107;">
            <h3 style="color: #856404; margin-bottom: 10px;">‚ö†Ô∏è Ìè¥Î∞± Î≥¥Í≥†ÏÑú ÏïàÎÇ¥</h3>
            <p style="color: #856404; margin: 0;">ÏõêÎ≥∏ 35ÌéòÏù¥ÏßÄ Î≥¥Í≥†ÏÑú Î°úÎìúÏóê Ïã§Ìå®ÌïòÏó¨ Í∏∞Î≥∏ Î≥¥Í≥†ÏÑúÍ∞Ä ÌëúÏãúÎê©ÎãàÎã§. Ï†ïÌôïÌïú ÏßÑÎã® Í≤∞Í≥ºÎ•º ÌôïÏù∏ÌïòÏãúÎ†§Î©¥ Í¥ÄÎ¶¨ÏûêÏóêÍ≤å Î¨∏ÏùòÌï¥Ï£ºÏÑ∏Ïöî.</p>
        </div>
    </div>
</body>
</html>`;
  };

  // V27.0 Ultimate 35ÌéòÏù¥ÏßÄ Î≥¥Í≥†ÏÑú Îã§Ïö¥Î°úÎìú
  const handleDownloadReport = async () => {
    try {
      setDownloadLoading(true);
      console.log('üì• V27.0 Ultimate 35ÌéòÏù¥ÏßÄ Î≥¥Í≥†ÏÑú Îã§Ïö¥Î°úÎìú ÏãúÏûë');
      
      if (!reportContent) {
        throw new Error('Îã§Ïö¥Î°úÎìúÌï† Î≥¥Í≥†ÏÑúÍ∞Ä ÏóÜÏäµÎãàÎã§.');
      }

      // HTMLÏùÑ BlobÏúºÎ°ú Î≥ÄÌôò
      const blob = new Blob([reportContent], { type: 'text/html;charset=utf-8' });
      
      // Îã§Ïö¥Î°úÎìú ÌååÏùºÎ™Ö ÏÉùÏÑ±
      const fileName = `AIÏó≠ÎüâÏßÑÎã®Î≥¥Í≥†ÏÑú_V25.0_${reportInfo?.fileName || diagnosisId}_${new Date().toISOString().split('T')[0]}.html`;
      
      // Îã§Ïö¥Î°úÎìú Ïã§Ìñâ
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = fileName;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      window.URL.revokeObjectURL(url);
      
      toast({
        title: "üì• Îã§Ïö¥Î°úÎìú ÏôÑÎ£å",
        description: `V25.0 Ï†ïÌôïÎèÑ Í∞úÏÑ† 24ÌéòÏù¥ÏßÄ Î≥¥Í≥†ÏÑúÍ∞Ä Îã§Ïö¥Î°úÎìúÎêòÏóàÏäµÎãàÎã§.`,
        duration: 3000,
      });
      
      console.log('‚úÖ V25.0 24ÌéòÏù¥ÏßÄ Î≥¥Í≥†ÏÑú Îã§Ïö¥Î°úÎìú ÏôÑÎ£å:', fileName);
      
    } catch (error: any) {
      console.error('‚ùå Îã§Ïö¥Î°úÎìú Ïò§Î•ò:', error);
      toast({
        title: "‚ùå Îã§Ïö¥Î°úÎìú Ïã§Ìå®",
        description: error.message,
        duration: 5000,
      });
    } finally {
      setDownloadLoading(false);
    }
  };

  // Î≥¥Í≥†ÏÑú ÏÉà Ï∞ΩÏóêÏÑú Î≥¥Í∏∞
  const handleViewInNewWindow = () => {
    if (!reportContent) return;
    
    const newWindow = window.open('', '_blank');
    if (newWindow) {
      newWindow.document.write(reportContent);
      newWindow.document.close();
    }
  };

  // Î≥¥Í≥†ÏÑú Ïù∏ÏáÑ
  const handlePrintReport = () => {
    if (!reportContent) return;
    
      const printWindow = window.open('', '_blank');
      if (printWindow) {
        printWindow.document.write(reportContent);
        printWindow.document.close();
        printWindow.print();
    }
  };

  if (authLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-600 via-purple-600 to-indigo-700 flex items-center justify-center">
        <Card className="w-full max-w-md">
          <CardContent className="flex flex-col items-center justify-center p-8">
            <Loader2 className="h-8 w-8 animate-spin text-blue-600 mb-4" />
            <p className="text-lg font-medium text-gray-700">ÏßÑÎã®ID Í∂åÌïú ÌôïÏù∏ Ï§ë...</p>
            <p className="text-sm text-gray-500 mt-2">Ïù¥Î©îÏùºÎ°ú Î∞õÏùÄ ÏßÑÎã®IDÎ•º ÌôïÏù∏ÌïòÍ≥† ÏûàÏäµÎãàÎã§</p>
          </CardContent>
        </Card>
      </div>
    );
  }

  if (isAuthorized === false) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-500 via-red-600 to-red-700 flex items-center justify-center p-4">
        <Card className="w-full max-w-lg">
          <CardHeader className="text-center">
          <div className="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <Shield className="h-8 w-8 text-red-600" />
            </div>
            <CardTitle className="text-2xl font-bold text-red-800">Ï†ëÍ∑º Í∂åÌïú ÏóÜÏùå</CardTitle>
            <CardDescription className="text-red-600">
              Ïù¥Î©îÏùºÎ°ú Î∞õÏùÄ Ï†ïÌôïÌïú ÏßÑÎã®IDÍ∞Ä ÌïÑÏöîÌï©ÎãàÎã§
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <Alert className="border-red-200 bg-red-50">
              <AlertCircle className="h-4 w-4" />
              <AlertDescription className="text-red-800">
                {error}
              </AlertDescription>
            </Alert>
            
            <div className="bg-red-50 p-4 rounded-lg border border-red-200">
              <h4 className="font-semibold text-red-800 mb-2">üìß ÏßÑÎã®ID ÌôïÏù∏ Î∞©Î≤ï</h4>
              <ul className="text-sm text-red-700 space-y-1">
                <li>‚Ä¢ AI Ïó≠ÎüâÏßÑÎã® ÏôÑÎ£å ÌõÑ Ïù¥Î©îÏùºÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî</li>
                <li>‚Ä¢ Ïä§Ìå∏ Î©îÏùºÌï®ÎèÑ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî</li>
                <li>‚Ä¢ ÏßÑÎã®ID ÌòïÏãù: DIAG_xxxxxxxxx</li>
              </ul>
          </div>
            
            <div className="flex gap-2">
              <Button 
                onClick={() => router.push('/report-access')}
                className="flex-1 bg-red-600 hover:bg-red-700"
              >
                <ArrowLeft className="h-4 w-4 mr-2" />
                Îã§Ïãú ÏãúÎèÑ
            </Button>
              <Button 
                onClick={() => router.push('/ai-diagnosis')}
                variant="outline"
                className="flex-1"
              >
                <FileText className="h-4 w-4 mr-2" />
                ÏÉà ÏßÑÎã®ÌïòÍ∏∞
            </Button>
          </div>
          </CardContent>
        </Card>
      </div>
    );
  }

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-600 via-purple-600 to-indigo-700 flex items-center justify-center">
        <Card className="w-full max-w-md">
          <CardContent className="flex flex-col items-center justify-center p-8">
            <Loader2 className="h-8 w-8 animate-spin text-blue-600 mb-4" />
            <p className="text-lg font-medium text-gray-700">V25.0 Ï†ïÌôïÎèÑ Í∞úÏÑ† Î≥¥Í≥†ÏÑú ÏÉùÏÑ± Ï§ë...</p>
            <p className="text-sm text-gray-500 mt-2">Ïã§Ï†ú Ï†êÏàò Í∏∞Î∞ò Ï†ïÌôïÌïú Î∂ÑÏÑùÏùÑ Ï§ÄÎπÑÌïòÍ≥† ÏûàÏäµÎãàÎã§</p>
          </CardContent>
        </Card>
      </div>
    );
  }

  if (error && !reportContent) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-500 via-red-600 to-red-700 flex items-center justify-center p-4">
        <Card className="w-full max-w-lg">
          <CardHeader className="text-center">
            <CardTitle className="text-2xl font-bold text-red-800">Î≥¥Í≥†ÏÑú Î°úÎìú Ïã§Ìå®</CardTitle>
          </CardHeader>
          <CardContent>
            <Alert className="border-red-200 bg-red-50">
              <AlertCircle className="h-4 w-4" />
              <AlertDescription className="text-red-800">
                {error}
              </AlertDescription>
            </Alert>
            
            <div className="flex gap-2 mt-4">
              <Button 
                onClick={() => window.location.reload()}
                className="flex-1 bg-red-600 hover:bg-red-700"
              >
                Îã§Ïãú ÏãúÎèÑ
              </Button>
              <Button 
                onClick={() => router.push('/report-access')}
                variant="outline"
                className="flex-1"
              >
            <ArrowLeft className="h-4 w-4 mr-2" />
            ÎèåÏïÑÍ∞ÄÍ∏∞
          </Button>
        </div>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50">
      {/* ÏÉÅÎã® Ìó§Îçî - ÏÑ∏Î°ú Í∏∏Ïù¥ Í∑†Ìòï ÎßûÏ∂§ */}
      <div className="bg-white shadow-sm border-b border-gray-200 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            <div className="flex items-center space-x-4">
              <Button
                onClick={() => router.push('/report-access')}
                variant="ghost"
                size="sm"
                className="text-gray-600 hover:text-gray-900"
              >
                <ArrowLeft className="h-4 w-4 mr-2" />
                ÎèåÏïÑÍ∞ÄÍ∏∞
              </Button>
              
              <div className="hidden sm:block">
                <h1 className="text-xl font-bold text-gray-900">AI Ïó≠ÎüâÏßÑÎã® Î≥¥Í≥†ÏÑú</h1>
                <p className="text-sm text-gray-500">V25.0 Ï†ïÌôïÎèÑ Í∞úÏÑ†</p>
              </div>
            </div>

            {/* Ïö∞Ï∏° ÏÉÅÎã® Ïï°ÏÖò Î≤ÑÌäºÎì§ - ÏÑ∏Î°ú Í∏∏Ïù¥ Í∑†Ìòï */}
            <div className="flex items-center space-x-2">
              <Button
                onClick={handleViewInNewWindow}
                variant="outline"
                size="sm"
                className="hidden md:flex"
              >
                <Eye className="h-4 w-4 mr-2" />
                ÏÉà Ï∞ΩÏóêÏÑú Î≥¥Í∏∞
              </Button>
              
              <Button
                onClick={handlePrintReport}
                variant="outline"
                size="sm"
                className="hidden md:flex"
              >
                <Printer className="h-4 w-4 mr-2" />
                Ïù∏ÏáÑ
              </Button>
              
              {/* 24ÌéòÏù¥ÏßÄ Îã§Ïö¥Î°úÎìú Î≤ÑÌäº ÌôúÏÑ±Ìôî */}
              <Button
                onClick={handleDownloadReport}
                disabled={downloadLoading || !reportContent}
                className="bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white shadow-lg"
                size="sm"
              >
                {downloadLoading ? (
                  <>
                    <Loader2 className="h-4 w-4 mr-2 animate-spin" />
                    Îã§Ïö¥Î°úÎìú Ï§ë...
                  </>
                ) : (
                  <>
                    <Download className="h-4 w-4 mr-2" />
                    24ÌéòÏù¥ÏßÄ Îã§Ïö¥Î°úÎìú
                  </>
                )}
              </Button>
            </div>
          </div>
        </div>
      </div>

      {/* Î©îÏù∏ Ïª®ÌÖêÏ∏† ÏòÅÏó≠ - Î≤§ÏπòÎßàÌÅ¨ Ï†úÍ±∞, AI Ïó≠ÎüâÏßÑÎã®Ïóê ÏßëÏ§ë */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        
        {/* AI Ïó≠ÎüâÏßÑÎã® Ï†ÑÏö© Ï†ïÎ≥¥ Ïπ¥Îìú - Î≤§ÏπòÎßàÌÅ¨ ÏôÑÏ†Ñ Ï†úÍ±∞, 24ÌéòÏù¥ÏßÄ ÏßëÏ§ë */}
        {reportInfo && (
          <Card className="mb-8 bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 shadow-2xl border-0 overflow-hidden">
            <CardHeader className="bg-gradient-to-r from-blue-600 to-indigo-600 text-white p-6">
              <div className="flex items-center gap-3">
                <div className="bg-white/20 p-3 rounded-full">
                  <FileText className="h-8 w-8" />
                </div>
                <div>
                  <CardTitle className="text-2xl font-bold">üìä AI Ïó≠ÎüâÏßÑÎã® Í≤∞Í≥ºÎ≥¥Í≥†ÏÑú</CardTitle>
                  <CardDescription className="text-blue-100 text-lg">ÏÉÅÏÑ∏ Î∂ÑÏÑù Î≥¥Í≥†ÏÑú Ï°∞Ìöå</CardDescription>
                </div>
              </div>
            </CardHeader>
            
            <CardContent className="p-8">
              <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
                <div className="flex flex-col items-center justify-center h-32 bg-gradient-to-br from-blue-50 to-blue-100 rounded-2xl border-3 border-blue-300 hover:border-blue-400 transition-all duration-300 shadow-lg hover:shadow-xl">
                  <div className="text-4xl font-bold text-blue-700 mb-2">{reportInfo.totalScore || 0}</div>
                  <div className="text-base font-semibold text-blue-600">Ïã§Ï†ú Ï¥ùÏ†ê</div>
                  <div className="text-sm text-blue-500 font-medium">/ 225Ï†ê ÎßåÏ†ê</div>
                </div>
                <div className="flex flex-col items-center justify-center h-32 bg-gradient-to-br from-green-50 to-green-100 rounded-2xl border-3 border-green-300 hover:border-green-400 transition-all duration-300 shadow-lg hover:shadow-xl">
                  <div className="text-4xl font-bold text-green-700 mb-2">{reportInfo.percentage || 0}%</div>
                  <div className="text-base font-semibold text-green-600">AI Ï§ÄÎπÑÎèÑ</div>
                  <div className="text-sm text-green-500 font-medium">Ï†ïÌôïÌïú Î∞±Î∂ÑÏú®</div>
                </div>
                <div className="flex flex-col items-center justify-center h-32 bg-gradient-to-br from-purple-50 to-purple-100 rounded-2xl border-3 border-purple-300 hover:border-purple-400 transition-all duration-300 shadow-lg hover:shadow-xl">
                  <div className="text-4xl font-bold text-purple-700 mb-2">{reportInfo.grade || 'F'}</div>
                  <div className="text-base font-semibold text-purple-600">Ï†ïÌôïÌïú Îì±Í∏â</div>
                  <div className="text-sm text-purple-500 font-medium">Ï†êÏàò Í∏∞Î∞ò ÌåêÏ†ï</div>
                </div>
                <div className="flex flex-col items-center justify-center h-32 bg-gradient-to-br from-indigo-50 to-indigo-100 rounded-2xl border-3 border-indigo-300 hover:border-indigo-400 transition-all duration-300 shadow-lg hover:shadow-xl">
                  <div className="text-3xl font-bold text-indigo-700 mb-2">ÏÉÅÏÑ∏Î∂ÑÏÑù</div>
                  <div className="text-base font-semibold text-indigo-600">ÏôÑÏ†ÑÌïú Î∂ÑÏÑù</div>
                  <div className="text-sm text-indigo-500 font-medium">V25.4 ÏµúÍ≥† ÌíàÏßà</div>
                </div>
              </div>
            </CardContent>
          </Card>
        )}

        {/* Î≥¥Ïïà Ïù∏Ï¶ù ÏôÑÎ£å ÏïàÎÇ¥ */}
        <Card className="mb-6 bg-gradient-to-r from-green-50 to-emerald-50 border-green-200">
          <CardContent className="p-6">
            <div className="flex items-center space-x-4">
              <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center">
                <Shield className="h-6 w-6 text-green-600" />
              </div>
              <div className="flex-1">
                <h3 className="text-lg font-semibold text-green-900 mb-1">
                  üîê Î≥¥Ïïà Ïù∏Ï¶ù ÏôÑÎ£å
                </h3>
                <p className="text-green-700">
                  ÏßÑÎã®ID Ïù∏Ï¶ùÏùÑ ÌÜµÌï¥ ÎãπÏÇ¨Ïûê Î≥∏Ïù∏Îßå Ï†ëÍ∑º Í∞ÄÎä•Ìïú Î≥¥Ïïà Ï≤¥Í≥ÑÍ∞Ä Ï†ÅÏö©ÎêòÏóàÏäµÎãàÎã§.
                </p>
              </div>
              <div className="hidden md:flex items-center space-x-2">
                <CheckCircle className="h-5 w-5 text-green-500" />
                <span className="text-sm text-green-700 font-medium">ÎãπÏÇ¨Ïûê Ï†ÑÏö©</span>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* AI Ïó≠ÎüâÏßÑÎã® ÏßëÏ§ë ÏïàÎÇ¥ */}
        <Card className="mb-6 bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200">
          <CardContent className="p-6">
            <div className="flex items-center space-x-4">
              <div className="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
                <BarChart3 className="h-6 w-6 text-blue-600" />
              </div>
              <div className="flex-1">
                <h3 className="text-lg font-semibold text-blue-900 mb-1">
                  üéØ AI Ïó≠ÎüâÏßÑÎã® Ï†ÑÎ¨∏ Î≥¥Í≥†ÏÑú
                </h3>
                <p className="text-blue-700">
                  Ïã§Ï†ú Ï†êÏàò({reportInfo?.totalScore || 0}Ï†ê) Í∏∞Î∞òÏúºÎ°ú Ï†ïÌôïÌïòÍ≤å ÏÉùÏÑ±Îêú ÎßûÏ∂§Ìòï AI Ï†ÑÎûµ Î≥¥Í≥†ÏÑúÏûÖÎãàÎã§.
                </p>
              </div>
              <div className="hidden md:flex items-center space-x-2">
                <CheckCircle className="h-5 w-5 text-green-500" />
                <span className="text-sm text-green-700 font-medium">V25.0 Ï†ïÌôïÎèÑ Í∞úÏÑ†</span>
        </div>
            </div>
          </CardContent>
        </Card>

        {/* Î≥¥Í≥†ÏÑú Î∑∞Ïñ¥ - ÏÑ∏Î°ú Í∏∏Ïù¥ Í∑†Ìòï Î∞è ÏÇ¨Ïö©Ïûê Í≤ΩÌóò Í∑πÎåÄÌôî */}
        <Card className="bg-white shadow-xl border-0 overflow-hidden" style={{ height: 'calc(100vh - 200px)' }}>
          <CardHeader className="bg-gradient-to-r from-blue-50 to-indigo-50 border-b border-blue-200 py-6">
            <div className="flex items-center justify-between">
              <div>
                <CardTitle className="text-xl font-bold text-gray-900 flex items-center gap-2">
                  <FileText className="h-6 w-6 text-blue-600" />
                  üéØ AI Ïó≠ÎüâÏßÑÎã® Ï†ÑÎ¨∏ Î≥¥Í≥†ÏÑú
                </CardTitle>
                <CardDescription className="text-gray-600 mt-2 flex items-center gap-4">
                  <span className="flex items-center gap-1">
                    <Shield className="h-4 w-4 text-green-500" />
                    ÏßÑÎã®ID: {diagnosisId}
                  </span>
                  <span className="flex items-center gap-1">
                    <CheckCircle className="h-4 w-4 text-blue-500" />
                    V25.0 Ï†ïÌôïÎèÑ Í∞úÏÑ†
                  </span>
                  <span className="flex items-center gap-1">
                    <FileText className="h-4 w-4 text-purple-500" />
                    24ÌéòÏù¥ÏßÄ ÏôÑÏ†Ñ Î∂ÑÏÑù
                  </span>
                </CardDescription>
      </div>

              {/* Ïö∞Ï∏° ÌïòÎã® Í≥†Ï†ï Ïï°ÏÖò Î≤ÑÌäºÎì§ */}
          <div className="flex items-center space-x-2">
                <Button
                  onClick={handleViewInNewWindow}
                  variant="outline"
                  size="sm"
                  className="hidden lg:flex"
                >
                  <Monitor className="h-4 w-4 mr-1" />
                  Ï†ÑÏ≤¥ÌôîÎ©¥
                </Button>
                
                <Button
                  onClick={handleDownloadReport}
                  disabled={downloadLoading || !reportContent}
                  className="bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white"
                  size="sm"
                >
                  {downloadLoading ? (
                    <>
                      <Loader2 className="h-4 w-4 mr-1 animate-spin" />
                      Îã§Ïö¥Î°úÎìú Ï§ë...
                    </>
                  ) : (
                    <>
                      <Download className="h-4 w-4 mr-1" />
                      24ÌéòÏù¥ÏßÄ Îã§Ïö¥Î°úÎìú
                    </>
                  )}
                </Button>
              </div>
            </div>
          </CardHeader>
          
          <CardContent className="p-0">
            {/* AI Ïó≠ÎüâÏßÑÎã® Î≥¥Í≥†ÏÑú Î∑∞Ïñ¥ - ÏÑ∏Î°ú Í∏∏Ïù¥ ÏµúÏ†ÅÌôî */}
            <div className="relative w-full" style={{ height: 'calc(100vh - 200px)', minHeight: '700px' }}>
              {reportContent ? (
                <>
                  <iframe
                    srcDoc={reportContent}
                    className="w-full h-full border-0 bg-white"
                    title="AI Ïó≠ÎüâÏßÑÎã® Î≥¥Í≥†ÏÑú"
                    style={{
                      borderRadius: '0 0 8px 8px'
                    }}
                  />
                  
                  {/* Ïö∞Ï∏° ÌïòÎã® Í≥†Ï†ï Ïï°ÏÖò Î≤ÑÌäºÎì§ - AI Ïó≠ÎüâÏßÑÎã® Î≥¥Í≥†ÏÑú Ï†ÑÏö© */}
                  <div className="absolute bottom-8 right-8 flex flex-col gap-4 z-50">
                    <div className="bg-white/95 backdrop-blur-sm rounded-2xl shadow-2xl border border-gray-200/50 p-4">
                      <div className="flex flex-col gap-3">
                        <Button
                          onClick={handleViewInNewWindow}
                          size="lg"
                          className="bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white shadow-lg rounded-xl w-16 h-16 p-0 transform hover:scale-110 transition-all duration-300"
                          title="ÏÉà Ï∞ΩÏóêÏÑú Ï†ÑÏ≤¥Î≥¥Í∏∞"
                        >
                          <Monitor className="h-7 w-7" />
                        </Button>
                        
                        <Button
                          onClick={handleDownloadReport}
                          disabled={downloadLoading}
                          size="lg"
                          className="bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white shadow-lg rounded-xl w-16 h-16 p-0 transform hover:scale-110 transition-all duration-300"
                          title="AI Ïó≠ÎüâÏßÑÎã® Î≥¥Í≥†ÏÑú Îã§Ïö¥Î°úÎìú"
                        >
                          {downloadLoading ? (
                            <Loader2 className="h-6 w-6 animate-spin" />
                          ) : (
                            <Download className="h-7 w-7" />
                          )}
                        </Button>
                        
                        <Button
                          onClick={() => window.print()}
                          size="lg"
                          className="bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white shadow-lg rounded-xl w-16 h-16 p-0 transform hover:scale-110 transition-all duration-300"
                          title="AI Ïó≠ÎüâÏßÑÎã® Î≥¥Í≥†ÏÑú Ïù∏ÏáÑ"
                        >
                          <Printer className="h-7 w-7" />
                        </Button>
                        
                        <Button
                          onClick={() => {
                            if (navigator.share) {
                              navigator.share({
                                title: `AI Ïó≠ÎüâÏßÑÎã® Î≥¥Í≥†ÏÑú (24ÌéòÏù¥ÏßÄ)`,
                                text: `Ïã§Ï†ú Ï†êÏàò ${reportInfo?.totalScore || 0}Ï†ê Í∏∞Î∞ò Ï†ïÌôïÌïú AI Ïó≠Îüâ Î∂ÑÏÑù`,
                                url: window.location.href
                              });
                            } else {
                              navigator.clipboard.writeText(window.location.href);
                              toast({
                                title: "üìã ÎßÅÌÅ¨ Î≥µÏÇ¨Îê®",
                                description: "AI Ïó≠ÎüâÏßÑÎã® Î≥¥Í≥†ÏÑú ÎßÅÌÅ¨Í∞Ä ÌÅ¥Î¶ΩÎ≥¥ÎìúÏóê Î≥µÏÇ¨ÎêòÏóàÏäµÎãàÎã§.",
                                duration: 3000,
                              });
                            }
                          }}
                          size="lg"
                          className="bg-gradient-to-r from-indigo-600 to-indigo-700 hover:from-indigo-700 hover:to-indigo-800 text-white shadow-lg rounded-xl w-16 h-16 p-0 transform hover:scale-110 transition-all duration-300"
                          title="AI Ïó≠ÎüâÏßÑÎã® Î≥¥Í≥†ÏÑú Í≥µÏú†"
                        >
                          <Share2 className="h-7 w-7" />
            </Button>
                      </div>
                    </div>
                  </div>
                </>
              ) : (
                <div className="flex items-center justify-center h-full bg-gray-50">
                  <div className="text-center">
                    <FileText className="h-16 w-16 text-gray-400 mx-auto mb-4" />
                    <p className="text-lg text-gray-600">AI Ïó≠ÎüâÏßÑÎã® Î≥¥Í≥†ÏÑúÎ•º Î∂àÎü¨Ïò§Îäî Ï§ë...</p>
                    <p className="text-sm text-gray-500 mt-2">Ïã§Ï†ú Ï†êÏàò Í∏∞Î∞ò Ï†ïÌôïÌïú Î∂ÑÏÑùÏùÑ ÏÉùÏÑ±ÌïòÍ≥† ÏûàÏäµÎãàÎã§</p>
                  </div>
                </div>
              )}
            </div>
          </CardContent>
        </Card>

        {/* ÌïòÎã® Í≥†Ï†ï Ïï°ÏÖò Î∞î - Î™®Î∞îÏùº ÏµúÏ†ÅÌôî */}
        <div className="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 p-4 lg:hidden">
          <div className="flex space-x-2 max-w-7xl mx-auto">
            <Button
              onClick={handleViewInNewWindow}
              variant="outline"
              className="flex-1"
              size="lg"
            >
              <Smartphone className="h-4 w-4 mr-2" />
              Ï†ÑÏ≤¥Î≥¥Í∏∞
            </Button>
            
            <Button
              onClick={handleDownloadReport}
              disabled={downloadLoading || !reportContent}
              className="flex-1 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white"
              size="lg"
            >
              {downloadLoading ? (
                <>
                  <Loader2 className="h-4 w-4 mr-2 animate-spin" />
                  Îã§Ïö¥Î°úÎìú Ï§ë...
                </>
              ) : (
                <>
                  <Download className="h-4 w-4 mr-2" />
                  24ÌéòÏù¥ÏßÄ Îã§Ïö¥Î°úÎìú
                </>
              )}
            </Button>
          </div>
        </div>
        
        {/* ÏÇ¨Ïö©Ïûê ÏïàÎÇ¥ Ï†ïÎ≥¥ - AI Ïó≠ÎüâÏßÑÎã® ÏßëÏ§ë */}
        <Card className="mt-6 mb-20 lg:mb-6 bg-gradient-to-r from-indigo-50 to-blue-50 border-indigo-200">
          <CardContent className="p-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <h4 className="font-semibold text-indigo-900 mb-3 flex items-center gap-2">
                  <BarChart3 className="h-5 w-5" />
                  üìä Î≥¥Í≥†ÏÑú ÌäπÏßï
                </h4>
                <ul className="text-sm text-indigo-800 space-y-2">
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    Ïã§Ï†ú Ï†êÏàò Í∏∞Î∞ò Ï†ïÌôïÌïú ÌèâÍ∞Ä
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    24ÌéòÏù¥ÏßÄ ÏôÑÏ†ÑÌïú Î∂ÑÏÑù Î≥¥Í≥†ÏÑú
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    ÏóÖÏ¢ÖÎ≥Ñ ÎßûÏ∂§Ìòï AI Ï†ÑÎûµ Ï†úÏãú
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    V25.0 Ï†ïÌôïÎèÑ Í∞úÏÑ† Ï†ÅÏö©
                  </li>
                </ul>
              </div>
              
              <div>
                <h4 className="font-semibold text-indigo-900 mb-3 flex items-center gap-2">
                  <Shield className="h-5 w-5" />
                  üîê Î≥¥Ïïà Î∞è Í∞úÏù∏Ï†ïÎ≥¥ Î≥¥Ìò∏
                </h4>
                <ul className="text-sm text-indigo-800 space-y-2">
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    Ïù¥Î©îÏùº ÏßÑÎã®ID Í∏∞Î∞ò ÏïàÏ†ÑÌïú Ï†ëÍ∑º
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    Ïã†Ï≤≠Ïûê Î≥∏Ïù∏Îßå Í≤∞Í≥º ÌôïÏù∏ Í∞ÄÎä•
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    Í∞úÏù∏Ï†ïÎ≥¥Î≥¥Ìò∏Î≤ïÎ†π ÏôÑÏ†Ñ Ï§ÄÏàò
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    Í¥ÄÎ¶¨Ïûê 010-9251-9743 Îã®Ïùº Ï†ëÍ∑º
                  </li>
                </ul>
              </div>
            </div>
            
            <div className="mt-6 p-4 bg-white rounded-lg border border-indigo-200">
              <p className="text-sm text-indigo-700 text-center">
                <strong>üìû Î¨∏ÏùòÏÇ¨Ìï≠:</strong> 010-9251-9743 (Í¥ÄÎ¶¨Ïûê ÏßÅÌÜµ) | 
                <strong>üìß Ïù¥Î©îÏùº:</strong> hongik423@gmail.com | 
                <strong>üåê ÏõπÏÇ¨Ïù¥Ìä∏:</strong> aicamp.club
              </p>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}