import { NextRequest, NextResponse } from 'next/server';

// ÏßàÎ¨∏ Î∂ÑÏÑù Î∞è ÎãµÎ≥Ä Í∏∏Ïù¥ Í≤∞Ï†ï Ìï®Ïàò
function analyzeQuestionAndDetermineLength(message: string): {
  minLength: number;
  maxLength: number;
  complexity: 'simple' | 'medium' | 'complex';
  responseType: 'brief' | 'standard' | 'detailed' | 'comprehensive';
  lengthGuideline: string;
} {
  const msg = message.toLowerCase().trim();
  
  // Í∞ÑÎã®Ìïú Ïù∏ÏÇ¨ÎÇò ÏßßÏùÄ ÏßàÎ¨∏Îì§
  const simplePatterns = [
    /^ÏïàÎÖï/, /^ÌïòÏù¥/, /^hi/, /^hello/, /^ÎÑ§$/, /^Ïòà$/, /^Í∞êÏÇ¨/, /^Í≥†Îßà/, /^Ï¢ã/, /^ÏµúÍ≥†/, /^ÌõåÎ•≠/,
    /^„Öã/, /^„Ñ∑„Ñ∑/, /^„Öé„Öé/, /^„Öá„Öá/, /^Îßû/, /^Í∑∏Îûò/, /^Ïò§ÏºÄÏù¥/, /^ok$/, /^okay$/
  ];
  
  // Îß§Ïö∞ Í∞ÑÎã®Ìïú ÎãµÎ≥ÄÏù¥ ÌïÑÏöîÌïú Í≤ΩÏö∞ (1-50Ïûê)
  if (simplePatterns.some(pattern => pattern.test(msg)) || msg.length <= 10) {
    return {
      minLength: 1,
      maxLength: 50,
      complexity: 'simple',
      responseType: 'brief',
      lengthGuideline: 'Îß§Ïö∞ Í∞ÑÎã®ÌïòÍ≥† ÏπúÍ∑ºÌïú Ïù∏ÏÇ¨ÎßêÏù¥ÎÇò ÏßßÏùÄ ÌôïÏù∏ ÎãµÎ≥ÄÏúºÎ°ú 1-50Ïûê Ïù¥ÎÇ¥Î°ú ÏùëÎãµÌïòÏÑ∏Ïöî.'
    };
  }
  
  // Îã®Ïàú Î¨∏Ïùò (50-200Ïûê)
  const basicInquiryPatterns = [
    /Ï†ÑÌôîÎ≤àÌò∏/, /Ïó∞ÎùΩÏ≤ò/, /Ï£ºÏÜå/, /ÏúÑÏπò/, /ÏãúÍ∞Ñ/, /Ïñ∏Ï†ú/, /ÏñºÎßà/, /ÎπÑÏö©/, /Í∞ÄÍ≤©/, /ÏöîÍ∏à/,
    /Ïñ¥Îîî/, /Î™áÏãú/, /Î™áÏùº/, /Ïñ∏Ï†úÍπåÏßÄ/, /Îπ®Î¶¨/, /Í∞ÑÎã®Ìûà/, /ÏßßÍ≤å/
  ];
  
  if (basicInquiryPatterns.some(pattern => pattern.test(msg)) || msg.length <= 30) {
    return {
      minLength: 50,
      maxLength: 200,
      complexity: 'simple',
      responseType: 'brief',
      lengthGuideline: 'ÌïµÏã¨ Ï†ïÎ≥¥Îßå Í∞ÑÎã®Î™ÖÎ£åÌïòÍ≤å 50-200ÏûêÎ°ú ÎãµÎ≥ÄÌïòÏÑ∏Ïöî. Î∂àÌïÑÏöîÌïú ÏÑ§Î™ÖÏùÄ Ï†úÏô∏ÌïòÍ≥† ÏöîÏ≤≠Ìïú Ï†ïÎ≥¥Îßå Ï†úÍ≥µÌïòÏÑ∏Ïöî.'
    };
  }
  
  // ÏùºÎ∞òÏ†ÅÏù∏ ÏÉÅÎã¥ Î¨∏Ïùò (200-800Ïûê)
  const standardInquiryPatterns = [
    /Ïñ¥ÎñªÍ≤å/, /Î∞©Î≤ï/, /Ï†àÏ∞®/, /Í≥ºÏ†ï/, /ÏßÑÌñâ/, /Ïã†Ï≤≠/, /ÏßÄÏõê/, /ÏÑúÎπÑÏä§/, /ÏÉÅÎã¥/, /Î¨∏Ïùò/,
    /Í∂ÅÍ∏à/, /ÏïåÍ≥†Ïã∂/, /ÏÑ§Î™Ö/, /ÎèÑÏõÄ/, /Ï∂îÏ≤ú/, /Ï†úÏïà/
  ];
  
  if (standardInquiryPatterns.some(pattern => pattern.test(msg)) && msg.length <= 100) {
    return {
      minLength: 200,
      maxLength: 800,
      complexity: 'medium',
      responseType: 'standard',
      lengthGuideline: 'Ï†ÅÏ†àÌïú ÏÑ§Î™ÖÍ≥º Íµ¨Ï≤¥Ï†ÅÏù∏ Ï†ïÎ≥¥Î•º Ìè¨Ìï®ÌïòÏó¨ 200-800ÏûêÎ°ú ÎãµÎ≥ÄÌïòÏÑ∏Ïöî. ÌïµÏã¨ ÎÇ¥Ïö©Í≥º Ïã§Ïö©Ï†ÅÏù∏ Ï°∞Ïñ∏ÏùÑ Í∑†ÌòïÏûàÍ≤å Ï†úÍ≥µÌïòÏÑ∏Ïöî.'
    };
  }
  
  // Ï†ÑÎ¨∏Ï†ÅÏù∏ Ïª®ÏÑ§ÌåÖ Î¨∏Ïùò (800-2000Ïûê)
  const consultingPatterns = [
    /ÏÇ¨ÏóÖÎ∂ÑÏÑù/, /Í≤ΩÏòÅÏßÄÎèÑ/, /Ïª®ÏÑ§ÌåÖ/, /Ï†ÑÎûµ/, /Í∞úÏÑ†/, /ÌòÅÏã†/, /ÏÑ±Ïû•/, /Î∞úÏ†Ñ/, /ÏßÑÎã®/,
    /Îß§Ï∂úÏ¶ùÎåÄ/, /ÎπÑÏö©Ï†àÍ∞ê/, /Ìö®Ïú®/, /ÏÉùÏÇ∞ÏÑ±/, /Ïù∏Ï¶ù/, /Ï∞ΩÏóÖ/, /Ìà¨Ïûê/, /Í≤ΩÎß§/, /ai/, /ÎîîÏßÄÌÑ∏/,
    /bmzen/, /ÏùºÌÑ∞ÌòÅÏã†/, /Ï†ïÎ∂ÄÏßÄÏõê/, /ÏÑ∏Ï†úÌòúÌÉù/, /ÏûêÍ∏àÌôïÎ≥¥/
  ];
  
  if (consultingPatterns.some(pattern => pattern.test(msg)) || msg.length <= 200) {
    return {
      minLength: 800,
      maxLength: 2000,
      complexity: 'medium',
      responseType: 'detailed',
      lengthGuideline: 'Ï†ÑÎ¨∏Ï†ÅÏù∏ Ïª®ÏÑ§ÌåÖ Í¥ÄÏ†êÏóêÏÑú ÏÉÅÏÑ∏Ìïú ÏÑ§Î™Ö, Ïã§Ï†ú ÏÇ¨Î°Ä, Íµ¨Ï≤¥Ï†ÅÏù∏ Ï†àÏ∞®ÏôÄ ÌòúÌÉùÏùÑ Ìè¨Ìï®ÌïòÏó¨ 800-2000ÏûêÎ°ú ÎãµÎ≥ÄÌïòÏÑ∏Ïöî. 28ÎÖÑ Í≤ΩÌóòÏùÑ Î∞îÌÉïÏúºÎ°ú Ïã§Ïö©Ï†ÅÏù∏ Ï°∞Ïñ∏ÏùÑ Ï†úÍ≥µÌïòÏÑ∏Ïöî.'
    };
  }
  
  // Î≥µÌï©Ï†ÅÏù¥Í≥† Î≥µÏû°Ìïú Î¨∏Ïùò (2000-4000Ïûê)
  const complexPatterns = [
    /.*?(Í∑∏Î¶¨Í≥†|ÎòêÌïú|Îòê|Ï∂îÍ∞ÄÎ°ú|ÎçîÎ∂àÏñ¥|ÏïÑÏö∏Îü¨|ÎèôÏãúÏóê).*?/, // Î≥µÌï© ÏßàÎ¨∏
    /.*?(ÏºÄÏù¥Ïä§|ÏÇ¨Î°Ä|Í≤ΩÌóò|Ïã§Ï†Å|ÏÑ±Í≥º|Í≤∞Í≥º).*?/, // ÏÇ¨Î°Ä ÏöîÏ≤≠
    /.*?(ÏûêÏÑ∏Ìûà|ÏÉÅÏÑ∏Ìûà|Íµ¨Ï≤¥Ï†ÅÏúºÎ°ú|ÏôÑÏ†ÑÌûà|Ï†ÑÏ≤¥Ï†ÅÏúºÎ°ú).*?/, // ÏÉÅÏÑ∏ ÏÑ§Î™Ö ÏöîÏ≤≠
  ];
  
  if (complexPatterns.some(pattern => pattern.test(msg)) || msg.length > 200) {
    return {
      minLength: 2000,
      maxLength: 4000,
      complexity: 'complex',
      responseType: 'comprehensive',
      lengthGuideline: 'Îß§Ïö∞ ÏÉÅÏÑ∏ÌïòÍ≥† Ìè¨Í¥ÑÏ†ÅÏù∏ ÎãµÎ≥ÄÏùÑ 2000-4000ÏûêÎ°ú Ï†úÍ≥µÌïòÏÑ∏Ïöî. Ïã§Ï†ú ÏÑ±Í≥º ÏÇ¨Î°Ä, Îã®Í≥ÑÎ≥Ñ ÌîÑÎ°úÏÑ∏Ïä§, Íµ¨Ï≤¥Ï†ÅÏù∏ ÏàòÏπò, Îã§ÏñëÌïú ÏòµÏÖòÍ≥º ÎåÄÏïà, Ïã§Ïö©Ï†ÅÏù∏ ÌåÅÏùÑ Î™®Îëê Ìè¨Ìï®ÌïòÏó¨ ÏôÑÏ†ÑÌïú ÏÜîÎ£®ÏÖòÏùÑ Ï†úÏãúÌïòÏÑ∏Ïöî.'
    };
  }
  
  // Í∏∞Î≥∏Í∞í (ÌëúÏ§Ä ÎãµÎ≥Ä Í∏∏Ïù¥)
  return {
    minLength: 800,
    maxLength: 1500,
    complexity: 'medium',
    responseType: 'standard',
    lengthGuideline: 'Í∑†ÌòïÏû°Ìûå ÏÑ§Î™ÖÏúºÎ°ú 800-1500Ïûê Ï†ïÎèÑÎ°ú ÎãµÎ≥ÄÌïòÏÑ∏Ïöî. ÌïµÏã¨ Ï†ïÎ≥¥ÏôÄ Ïã§Ïö©Ï†ÅÏù∏ Ï°∞Ïñ∏ÏùÑ Ï†ÅÏ†àÌûà Ï°∞Ìï©ÌïòÏó¨ Ï†úÍ≥µÌïòÏÑ∏Ïöî.'
  };
}

export async function POST(request: NextRequest) {
  let message: string = ''; // Ïä§ÏΩîÌîÑ Î¨∏Ï†ú Ìï¥Í≤∞ÏùÑ ÏúÑÌï¥ ÏÉÅÎã®ÏóêÏÑú ÏÑ†Ïñ∏
  
  try {
    const requestBody = await request.json();
    message = requestBody.message;
    
    if (!message) {
      return NextResponse.json({ error: 'Message is required' }, { status: 400 });
    }

    // ÏßàÎ¨∏ Î∂ÑÏÑù Î∞è ÎãµÎ≥Ä Í∏∏Ïù¥ Í≤∞Ï†ï
    const analysisResult = analyzeQuestionAndDetermineLength(message);
    
    const GEMINI_API_KEY = process.env.GEMINI_API_KEY;
    
    const systemPrompt = `ÎãπÏã†ÏùÄ 28ÎÖÑ Î≤†ÌÖåÎûë Ïª®ÏÑ§ÌÑ¥Ìä∏ Ïù¥ÌõÑÍ≤Ω Í≤ΩÏòÅÏßÄÎèÑÏÇ¨ÏûÖÎãàÎã§. ÎßàÏπò ÏÇ¨Î¨¥Ïã§ÏóêÏÑú Í∏∞ÏóÖ ÎåÄÌëúÏôÄ ÏßÅÏ†ë ÎßàÏ£ºÏïâÏïÑ ÏÉÅÎã¥ÌïòÎäî Í≤ÉÏ≤òÎüº ÏûêÏó∞Ïä§ÎüΩÍ≥† ÏπúÍ∑ºÌïòÎ©¥ÏÑúÎèÑ ÌïµÏã¨ÏùÑ ÏßöÏñ¥Ï£ºÎäî ÎåÄÌôîÏ≤¥Î°ú ÎãµÎ≥ÄÌï¥Ï£ºÏÑ∏Ïöî.

üéØ **ÎãµÎ≥Ä Í∏∏Ïù¥ Ï°∞Ï†à ÏßÄÏπ® (Îß§Ïö∞ Ï§ëÏöî!)**
${analysisResult.lengthGuideline}

üìä **ÌòÑÏû¨ ÏßàÎ¨∏ Î∂ÑÏÑù**
- Î≥µÏû°ÎèÑ: ${analysisResult.complexity}
- ÎãµÎ≥Ä Ïú†Ìòï: ${analysisResult.responseType}
- Î™©Ìëú Í∏∏Ïù¥: ${analysisResult.minLength}-${analysisResult.maxLength}Ïûê
- ÏßàÎ¨∏Ïùò Îß•ÎùΩÏóê Îî∞Îùº Ïù¥ Î≤îÏúÑ ÎÇ¥ÏóêÏÑú Í∞ÄÏû• Ï†ÅÏ†àÌïú Í∏∏Ïù¥Î°ú ÎãµÎ≥ÄÌïòÏÑ∏Ïöî.

Ïù¥ÌõÑÍ≤Ω Í≤ΩÏòÅÏßÄÎèÑÏÇ¨ ÏÜåÍ∞ú:
      ÌòÑÎåÄÍ∑∏Î£πÏóêÏÑú 8ÎÖÑ, ÏÇºÏÑ±ÏÉùÎ™ÖÏóêÏÑú 10ÎÖÑ, Í∑∏Î¶¨Í≥† 10ÎÖÑÍ∞Ñ 200Ïó¨ Í∞ú Í∏∞ÏóÖÏùÑ ÏßÅÏ†ë ÏßÄÎèÑÌï¥Ïò® Î≤†ÌÖåÎûë Ï†ÑÎ¨∏Í∞ÄÏûÖÎãàÎã§. AI CAMP ÍµêÏû•Ïù¥Ïûê AI ÌîÑÎ°úÏÑ∏Ïä§ ÏûêÎèôÌôî Ïª®ÏÑ§ÌåÖ Î∞è ÍµêÏú° Ï†ÑÎ¨∏Í∞ÄÎ°ú ÌôúÎèôÌïòÎ©∞, Í∏∞ÏóÖÍ≥º Í∞úÏù∏Ïùò AI Ïó≠Îüâ Í∞ïÌôîÎ•º ÏßÄÏõêÌïòÍ≥† ÏûàÏäµÎãàÎã§.

Ï†ÑÎ¨∏ Î∂ÑÏïº:
- BM ZEN ÏÇ¨ÏóÖÎ∂ÑÏÑùÏúºÎ°ú Îß§Ï∂ú 20-40% Ï¶ùÎåÄ
- AI ÏÉùÏÇ∞ÏÑ±ÌòÅÏã†ÏúºÎ°ú ÏóÖÎ¨¥Ìö®Ïú® 40% Ìñ•ÏÉÅ (Ï†ïÎ∂Ä 100% ÏßÄÏõê)
- Í≥µÏû•/Î∂ÄÎèôÏÇ∞ Í≤ΩÎß§Î°ú Ìà¨ÏûêÎπÑ 35-50% Ï†àÏïΩ
- Í∏∞Ïà†Ï∞ΩÏóÖ ÏßÄÏõêÏúºÎ°ú ÌèâÍ∑† 5ÏñµÏõê ÏûêÍ∏à ÌôïÎ≥¥
- Ïù∏Ï¶ùÏßÄÏõêÏúºÎ°ú Ïó∞Í∞Ñ 5Ï≤úÎßåÏõê ÏÑ∏Ï†úÌòúÌÉù
- ÎîîÏßÄÌÑ∏ ÌòÅÏã†ÏúºÎ°ú Ïò®ÎùºÏù∏ Îß§Ï∂ú 300% Ï¶ùÎåÄ

ÎãµÎ≥Ä ÌÜ§Ïï§Îß§ÎÑà:
28ÎÖÑÍ∞Ñ ÏåìÏùÄ Í≤ΩÌóòÏùÑ Î∞îÌÉïÏúºÎ°ú ÏÉÅÎåÄÎ∞© Í∏∞ÏóÖÏùò ÏÉÅÌô©ÏùÑ Ï†ïÌôïÌûà ÌååÏïÖÌïòÍ≥†, ÎßàÏπò Ïò§Îûú ÏÑ†Î∞∞Í∞Ä ÌõÑÎ∞∞ÏóêÍ≤å Ï°∞Ïñ∏ÌïòÎìØ Îî∞ÎúªÌïòÎ©¥ÏÑúÎèÑ ÌïµÏã¨ÏùÑ Ï∞åÎ•¥Îäî Ïù¥ÏïºÍ∏∞Î•º ÏûêÏó∞Ïä§ÎüΩÍ≤å ÌíÄÏñ¥Í∞ÄÏÑ∏Ïöî. Î≥µÏû°Ìïú Í≤ΩÏòÅ Ïù¥Î°†Î≥¥Îã§Îäî "Ï†úÍ∞Ä ÏßÅÏ†ë Ìï¥Î¥§ÎäîÎç∞Ïöî", "Ïù¥Îü∞ ÏºÄÏù¥Ïä§Í∞Ä ÏûàÏóàÏñ¥Ïöî" Í∞ôÏùÄ Ïã§Ï†ú Í≤ΩÌóòÎã¥ÏùÑ Îì§Î†§Ï£ºÎ©¥ÏÑú Ïã§Ïö©Ï†ÅÏù∏ Ìï¥Í≤∞Ï±ÖÏùÑ Ï†úÏãúÌïòÏÑ∏Ïöî.

ÎãµÎ≥Ä Î∞©Ïãù (Í∏∏Ïù¥Ïóê Îî∞Îùº Ï°∞Ï†à):
${analysisResult.responseType === 'brief' 
  ? '1. ÌïµÏã¨Îßå Í∞ÑÎã®Î™ÖÎ£åÌïòÍ≤å\n2. ÌïÑÏöîÏãú Ïó∞ÎùΩÏ≤ò Ï†ïÎèÑÎßå Ï∂îÍ∞Ä'
  : analysisResult.responseType === 'standard'
  ? '1. ÏÉÅÎåÄÎ∞©Ïùò Í≥†ÎØº Í≥µÍ∞ê\n2. ÌïµÏã¨ Ìï¥Í≤∞ Î∞©Ïïà\n3. Íµ¨Ï≤¥Ï†ÅÏù∏ Îã§Ïùå ÌñâÎèô Ï†úÏïà'
  : analysisResult.responseType === 'detailed'
  ? '1. ÏÉÅÎåÄÎ∞©Ïùò Í≥†ÎØºÏùÑ Ï†ïÌôïÌûà Ïù¥Ìï¥ÌñàÎã§Îäî Í≥µÍ∞êÎ∂ÄÌÑ∞ ÏãúÏûë\n2. ÎπÑÏä∑Ìïú ÏºÄÏù¥Ïä§Ïùò Ïã§Ï†ú Í≤ΩÌóòÎã¥ ÏÜåÍ∞ú\n3. Îã®Í≥ÑÎ≥ÑÎ°ú ÏâΩÍ≤å ÏÑ§Î™ÖÌïòÎäî Ìï¥Í≤∞ Î∞©Ïïà\n4. Ï†ïÎ∂ÄÏßÄÏõê Îì± Ïã§ÏßàÏ†Å ÌòúÌÉù Ï†ïÎ≥¥\n5. Íµ¨Ï≤¥Ï†ÅÏù∏ Îã§Ïùå ÌñâÎèô Ï†úÏïà'
  : '1. ÏÉÅÎåÄÎ∞©Ïùò Í≥†ÎØºÏùÑ Ï†ïÌôïÌûà Ïù¥Ìï¥ÌñàÎã§Îäî Í≥µÍ∞êÎ∂ÄÌÑ∞ ÏãúÏûë\n2. Îã§ÏñëÌïú ÏºÄÏù¥Ïä§Ïùò Ïã§Ï†ú Í≤ΩÌóòÎã¥Í≥º ÏÑ±Í≥º ÏàòÏπò ÏÜåÍ∞ú\n3. ÏÉÅÏÑ∏Ìïú Îã®Í≥ÑÎ≥Ñ Ìï¥Í≤∞ Î∞©ÏïàÍ≥º ÌîÑÎ°úÏÑ∏Ïä§\n4. Ï†ïÎ∂ÄÏßÄÏõê, ÏÑ∏Ï†úÌòúÌÉù Îì± Î™®Îì† Ïã§ÏßàÏ†Å Ï†ïÎ≥¥\n5. Ïó¨Îü¨ ÏòµÏÖòÍ≥º ÎåÄÏïà Ï†úÏãú\n6. Íµ¨Ï≤¥Ï†ÅÏù∏ Îã§Ïùå ÌñâÎèô Ï†úÏïàÍ≥º Ïó∞ÎùΩ Î∞©Î≤ï'
}

Ï§ëÏöî ÏßÄÏπ®:
- ÎßàÌÅ¨Îã§Ïö¥ Í∏∞Ìò∏(###, **, Îì±)Îäî Ï†àÎåÄ ÏÇ¨Ïö©ÌïòÏßÄ ÎßàÏÑ∏Ïöî
- ÏûêÏó∞Ïä§Îü¨Ïö¥ ÎåÄÌôîÏ≤¥Î°ú ÎãµÎ≥ÄÌïòÏÑ∏Ïöî
- Îî±Îî±Ìïú Ï†ÑÎ¨∏Ïö©Ïñ¥Î≥¥Îã§Îäî ÏâΩÍ≥† ÏπúÍ∑ºÌïú ÌëúÌòÑ ÏÇ¨Ïö©
- Ïã§Ï†ú ÏÑ±Í≥º ÏàòÏπòÏôÄ Íµ¨Ï≤¥Ï†ÅÏù∏ ÏÇ¨Î°ÄÎ•º Ìè¨Ìï®
- Îî∞ÎúªÌïòÏßÄÎßå ÌôïÏã†Ïóê Ï∞¨ Ïñ¥Ï°∞ Ïú†ÏßÄ
- ÏßàÎ¨∏Ïùò ÏÑ±Í≤©Ïóê ÎßûÎäî Ï†ÅÏ†àÌïú Í∏∏Ïù¥Î°ú ÎãµÎ≥ÄÌïòÎêò, ÏßÄÏ†ïÎêú Î≤îÏúÑ(${analysisResult.minLength}-${analysisResult.maxLength}Ïûê)Î•º Ï§ÄÏàòÌïòÏÑ∏Ïöî

ÏßàÎ¨∏ Í∏∞ÏóÖÏùò ÏÉÅÌô©ÏùÑ 28ÎÖÑ Î≤†ÌÖåÎûë Ïª®ÏÑ§ÌÑ¥Ìä∏Ïùò ÏãúÍ∞ÅÏúºÎ°ú Î∂ÑÏÑùÌïòÍ≥†, ÎßàÏπò ÏßÅÏ†ë ÎßåÎÇòÏÑú ÏÉÅÎã¥ÌïòÎäî Í≤ÉÏ≤òÎüº ÏûêÏó∞Ïä§ÎüΩÍ≥† Îß•ÎùΩÏóê ÎßûÎäî Ï†ÅÏ†àÌïú Í∏∏Ïù¥Ïùò Ï°∞Ïñ∏ÏùÑ Ï†úÍ≥µÌï¥Ï£ºÏÑ∏Ïöî.`;

    const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent?key=${GEMINI_API_KEY}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        contents: [{
          parts: [{
            text: `${systemPrompt}\n\nÏÇ¨Ïö©Ïûê ÏßàÎ¨∏: ${message}`
          }]
        }],
        generationConfig: {
          temperature: 0.7,
          topK: 40,
          topP: 0.95,
          maxOutputTokens: analysisResult.maxLength > 2000 ? 8192 : 4096,
        },
        safetySettings: [
          {
            category: "HARM_CATEGORY_HARASSMENT",
            threshold: "BLOCK_ONLY_HIGH"
          },
          {
            category: "HARM_CATEGORY_HATE_SPEECH", 
            threshold: "BLOCK_ONLY_HIGH"
          },
          {
            category: "HARM_CATEGORY_SEXUALLY_EXPLICIT",
            threshold: "BLOCK_ONLY_HIGH"
          },
          {
            category: "HARM_CATEGORY_DANGEROUS_CONTENT",
            threshold: "BLOCK_ONLY_HIGH"
          }
        ]
      })
    });

    if (!response.ok) {
      console.error('GEMINI API Error:', response.status, response.statusText);
      throw new Error(`API Error: ${response.status}`);
    }

    const data = await response.json();
    
    if (data.candidates && data.candidates[0] && data.candidates[0].content) {
      const aiResponse = data.candidates[0].content.parts[0].text;
      
      // ÏùëÎãµ Í∏∏Ïù¥ Í≤ÄÏ¶ù Î∞è Î°úÍπÖ
      const responseLength = aiResponse.length;
      console.log(`üìè ÎãµÎ≥Ä Í∏∏Ïù¥ Î∂ÑÏÑù: Î™©Ìëú ${analysisResult.minLength}-${analysisResult.maxLength}Ïûê, Ïã§Ï†ú ${responseLength}Ïûê`);
      
      return NextResponse.json({ 
        response: aiResponse,
        analysisInfo: {
          complexity: analysisResult.complexity,
          responseType: analysisResult.responseType,
          targetLength: `${analysisResult.minLength}-${analysisResult.maxLength}`,
          actualLength: responseLength
        }
      });
    } else {
      throw new Error('Invalid response format from GEMINI API');
    }

  } catch (error) {
    console.error('Chat AI API Error:', error);
    
    // Ìè¥Î∞± ÎãµÎ≥Ä ÏôÑÏ†Ñ Ï†úÍ±∞ - AI Î∂ÑÏÑù Ïã§Ìå® Ïãú Ïò§Î•ò Î∞úÏÉù
    return NextResponse.json(
      { 
        success: false, 
        error: 'AI Î∂ÑÏÑù ÏÑúÎπÑÏä§Ïóê ÏùºÏãúÏ†ÅÏù∏ Î¨∏Ï†úÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.' 
      }, 
      { status: 500 }
    );
  }
} 