/**
 * üìä McKinsey Ïä§ÌÉÄÏùº Î≥¥Í≥†ÏÑú ÏÉùÏÑ± ÏóîÏßÑ
 * ÏÑ∏Í≥Ñ ÏµúÍ≥† ÏàòÏ§ÄÏùò Ï†ÑÎûµ Ïª®ÏÑ§ÌåÖ Î≥¥Í≥†ÏÑú ÌíàÏßà Íµ¨ÌòÑ
 */

import { AdvancedScoreResult } from '../analysis/advanced-scoring-engine';
import { StrategicAnalysisResult } from '../analysis/ai-strategic-analyzer';

export interface McKinseyReportConfig {
  style: 'executive' | 'detailed' | 'presentation';
  format: 'html' | 'pdf' | 'powerpoint';
  branding: string;
  includeCharts: boolean;
  includeAppendix: boolean;
  customization: ReportCustomization;
}

export interface ReportCustomization {
  colorScheme: 'mckinsey' | 'corporate' | 'modern';
  logoUrl?: string;
  footerText?: string;
  executiveSummaryLength: 'short' | 'medium' | 'long';
  detailLevel: 'high' | 'medium' | 'low';
  includeMethodology: boolean;
}

export interface McKinseyReport {
  metadata: ReportMetadata;
  executiveSummary: ExecutiveSummarySection;
  situationAnalysis: SituationAnalysisSection;
  strategicRecommendations: StrategicRecommendationsSection;
  implementationRoadmap: ImplementationRoadmapSection;
  financialAnalysis: FinancialAnalysisSection;
  riskAssessment: RiskAssessmentSection;
  appendix: AppendixSection;
  htmlContent: string;
  charts: ChartData[];
  qualityMetrics: ReportQualityMetrics;
}

export interface ReportMetadata {
  title: string;
  subtitle: string;
  client: string;
  date: string;
  version: string;
  authors: string[];
  confidentiality: 'Public' | 'Internal' | 'Confidential' | 'Restricted';
  pageCount: number;
  wordCount: number;
}

export interface ExecutiveSummarySection {
  situation: string;
  complication: string;
  question: string;
  answer: string;
  keyFindings: KeyFinding[];
  recommendations: ExecutiveRecommendation[];
  nextSteps: string[];
}

export interface KeyFinding {
  title: string;
  description: string;
  impact: 'High' | 'Medium' | 'Low';
  confidence: 'High' | 'Medium' | 'Low';
  supportingData: string[];
}

export interface ExecutiveRecommendation {
  title: string;
  description: string;
  rationale: string;
  impact: string;
  timeline: string;
  investment: string;
}

export interface SituationAnalysisSection {
  currentState: CurrentStateAnalysis;
  competitiveContext: CompetitiveContextAnalysis;
  marketDynamics: MarketDynamicsAnalysis;
  internalCapabilities: InternalCapabilitiesAnalysis;
}

export interface CurrentStateAnalysis {
  overview: string;
  keyMetrics: Metric[];
  strengths: string[];
  challenges: string[];
  opportunities: string[];
}

export interface Metric {
  name: string;
  value: string;
  benchmark: string;
  trend: 'up' | 'down' | 'stable';
  interpretation: string;
}

export interface CompetitiveContextAnalysis {
  marketPosition: string;
  competitors: CompetitorProfile[];
  competitiveAdvantages: string[];
  threats: string[];
}

export interface CompetitorProfile {
  name: string;
  marketShare: string;
  strengths: string[];
  weaknesses: string[];
  aiMaturity: string;
}

export interface MarketDynamicsAnalysis {
  marketSize: string;
  growthRate: string;
  keyTrends: string[];
  disruptiveForces: string[];
  regulatoryFactors: string[];
}

export interface InternalCapabilitiesAnalysis {
  coreCompetencies: string[];
  resourceAssessment: ResourceAssessment[];
  organizationalReadiness: string;
  culturalFactors: string[];
}

export interface ResourceAssessment {
  category: 'Human' | 'Technology' | 'Financial' | 'Operational';
  current: string;
  required: string;
  gap: string;
  priority: 'High' | 'Medium' | 'Low';
}

export interface StrategicRecommendationsSection {
  overarchingStrategy: string;
  strategicPillars: StrategicPillar[];
  priorityMatrix: PriorityMatrix;
  synergies: string[];
}

export interface StrategicPillar {
  title: string;
  description: string;
  objectives: string[];
  initiatives: Initiative[];
  successMetrics: string[];
  timeline: string;
  investment: string;
}

export interface Initiative {
  name: string;
  description: string;
  owner: string;
  timeline: string;
  resources: string[];
  dependencies: string[];
  risks: string[];
}

export interface PriorityMatrix {
  quickWins: Initiative[];
  majorProjects: Initiative[];
  fillIns: Initiative[];
  thanklessTasks: Initiative[];
}

export interface ImplementationRoadmapSection {
  phases: ImplementationPhase[];
  milestones: RoadmapMilestone[];
  governance: GovernanceStructure;
  changeManagement: ChangeManagementPlan;
}

export interface ImplementationPhase {
  name: string;
  duration: string;
  objectives: string[];
  deliverables: string[];
  resources: string[];
  budget: string;
  risks: string[];
  successCriteria: string[];
}

export interface RoadmapMilestone {
  name: string;
  date: string;
  description: string;
  deliverables: string[];
  stakeholders: string[];
  criteria: string[];
}

export interface GovernanceStructure {
  steeringCommittee: string[];
  workingGroups: WorkingGroup[];
  decisionRights: DecisionRight[];
  reportingStructure: string;
}

export interface WorkingGroup {
  name: string;
  purpose: string;
  members: string[];
  deliverables: string[];
  timeline: string;
}

export interface DecisionRight {
  decision: string;
  owner: string;
  approver: string;
  timeline: string;
}

export interface ChangeManagementPlan {
  stakeholderAnalysis: StakeholderGroup[];
  communicationPlan: CommunicationActivity[];
  trainingPlan: TrainingActivity[];
  resistanceManagement: ResistanceStrategy[];
}

export interface StakeholderGroup {
  group: string;
  influence: 'High' | 'Medium' | 'Low';
  support: 'Champion' | 'Supporter' | 'Neutral' | 'Skeptic' | 'Blocker';
  concerns: string[];
  engagementStrategy: string;
}

export interface CommunicationActivity {
  audience: string;
  message: string;
  channel: string;
  frequency: string;
  owner: string;
}

export interface TrainingActivity {
  audience: string;
  content: string;
  format: string;
  duration: string;
  timeline: string;
}

export interface ResistanceStrategy {
  source: string;
  reason: string;
  strategy: string;
  owner: string;
  timeline: string;
}

export interface FinancialAnalysisSection {
  investmentSummary: InvestmentSummary;
  roiAnalysis: ROIAnalysis;
  costBenefitAnalysis: CostBenefitAnalysis;
  sensitivityAnalysis: SensitivityAnalysis;
  fundingStrategy: FundingStrategy;
}

export interface InvestmentSummary {
  totalInvestment: string;
  breakdown: InvestmentBreakdown[];
  timeline: string;
  fundingSources: string[];
}

export interface InvestmentBreakdown {
  category: string;
  amount: string;
  percentage: string;
  justification: string;
}

export interface ROIAnalysis {
  paybackPeriod: string;
  npv: string;
  irr: string;
  yearlyReturns: YearlyReturn[];
  assumptions: string[];
}

export interface YearlyReturn {
  year: number;
  investment: string;
  benefits: string;
  netReturn: string;
  cumulativeReturn: string;
}

export interface CostBenefitAnalysis {
  costs: CostItem[];
  benefits: BenefitItem[];
  netBenefit: string;
  benefitCostRatio: string;
}

export interface CostItem {
  category: string;
  description: string;
  amount: string;
  timing: string;
  certainty: 'High' | 'Medium' | 'Low';
}

export interface BenefitItem {
  category: string;
  description: string;
  amount: string;
  timing: string;
  certainty: 'High' | 'Medium' | 'Low';
}

export interface SensitivityAnalysis {
  baseCase: string;
  bestCase: string;
  worstCase: string;
  keyVariables: SensitivityVariable[];
}

export interface SensitivityVariable {
  variable: string;
  impact: string;
  range: string;
  probability: string;
}

export interface FundingStrategy {
  approach: string;
  sources: FundingSource[];
  timeline: string;
  contingencies: string[];
}

export interface FundingSource {
  source: string;
  amount: string;
  terms: string;
  probability: string;
}

export interface RiskAssessmentSection {
  riskFramework: string;
  keyRisks: RiskItem[];
  mitigationPlan: MitigationPlan;
  contingencyPlanning: ContingencyPlanning;
}

export interface RiskItem {
  category: string;
  description: string;
  probability: 'High' | 'Medium' | 'Low';
  impact: 'High' | 'Medium' | 'Low';
  riskScore: number;
  owner: string;
  timeline: string;
}

export interface MitigationPlan {
  strategies: MitigationStrategy[];
  monitoring: MonitoringActivity[];
  escalation: EscalationProcedure[];
}

export interface MitigationStrategy {
  risk: string;
  strategy: string;
  effectiveness: string;
  cost: string;
  owner: string;
  timeline: string;
}

export interface MonitoringActivity {
  risk: string;
  indicator: string;
  frequency: string;
  threshold: string;
  owner: string;
}

export interface EscalationProcedure {
  trigger: string;
  action: string;
  owner: string;
  timeline: string;
}

export interface ContingencyPlanning {
  scenarios: ContingencyScenario[];
  responses: ContingencyResponse[];
}

export interface ContingencyScenario {
  scenario: string;
  probability: string;
  impact: string;
  triggers: string[];
}

export interface ContingencyResponse {
  scenario: string;
  response: string;
  resources: string[];
  timeline: string;
  owner: string;
}

export interface AppendixSection {
  methodology: string;
  dataSource: string[];
  assumptions: string[];
  limitations: string[];
  glossary: GlossaryItem[];
  references: string[];
}

export interface GlossaryItem {
  term: string;
  definition: string;
}

export interface ChartData {
  id: string;
  type: 'bar' | 'line' | 'pie' | 'radar' | 'scatter' | 'waterfall';
  title: string;
  data: any;
  config: any;
}

export interface ReportQualityMetrics {
  contentQuality: number; // 0-100
  visualQuality: number; // 0-100
  structuralQuality: number; // 0-100
  analyticalRigor: number; // 0-100
  actionability: number; // 0-100
  overallScore: number; // 0-100
  qualityFlags: string[];
}

/**
 * McKinsey Ïä§ÌÉÄÏùº Î≥¥Í≥†ÏÑú ÏÉùÏÑ±Í∏∞ V15.0
 * ÌîÑÎ°¨ÌîÑÌÑ∞ Í∏∞Î∞ò 11Í∞ú ÏÑπÏÖò ÏôÑÎ≤Ω Íµ¨ÌòÑ
 */
export class McKinseyReportGenerator {
  private config: McKinseyReportConfig;
  private readonly VERSION = 'V15.0-ULTIMATE-MCKINSEY';
  
  constructor(config: McKinseyReportConfig) {
    this.config = {
      ...config,
      version: this.VERSION,
      sections: [
        'coverPage',
        'executiveSummary',
        'companyInformation',
        'diagnosisVisualization',
        'behavioralAnalysis',
        'benchmarkAnalysis',
        'swotAnalysis',
        'priorityMatrix',
        'n8nMethodology',
        'aicampCurriculum',
        'roadmap',
        'conclusion'
      ]
    };
  }
  
  /**
   * Î©îÏù∏ Î≥¥Í≥†ÏÑú ÏÉùÏÑ± Ìï®Ïàò V15.0
   * 11Í∞ú ÏÑπÏÖò Îß•ÌÇ®ÏßÄ Ïä§ÌÉÄÏùº Î≥¥Í≥†ÏÑú ÏÉùÏÑ±
   */
  async generateReport(
    scoreResult: AdvancedScoreResult,
    strategicAnalysis: StrategicAnalysisResult,
    companyInfo: any
  ): Promise<McKinseyReport> {
    
    console.log('üìä McKinsey Ïä§ÌÉÄÏùº Î≥¥Í≥†ÏÑú ÏÉùÏÑ± ÏãúÏûë...');
    
    // 1. Î©îÌÉÄÎç∞Ïù¥ÌÑ∞ ÏÉùÏÑ±
    const metadata = this.generateMetadata(companyInfo);
    
    // 2. Í≤ΩÏòÅÏßÑ ÏöîÏïΩ ÏÉùÏÑ±
    const executiveSummary = this.generateExecutiveSummary(
      scoreResult, 
      strategicAnalysis, 
      companyInfo
    );
    
    // 3. ÏÉÅÌô© Î∂ÑÏÑù ÏÉùÏÑ±
    const situationAnalysis = this.generateSituationAnalysis(
      scoreResult, 
      strategicAnalysis, 
      companyInfo
    );
    
    // 4. Ï†ÑÎûµÏ†Å Í∂åÍ≥†Ïïà ÏÉùÏÑ±
    const strategicRecommendations = this.generateStrategicRecommendations(
      strategicAnalysis
    );
    
    // 5. Ïã§Ìñâ Î°úÎìúÎßµ ÏÉùÏÑ±
    const implementationRoadmap = this.generateImplementationRoadmap(
      strategicAnalysis
    );
    
    // 6. Ïû¨Î¨¥ Î∂ÑÏÑù ÏÉùÏÑ±
    const financialAnalysis = this.generateFinancialAnalysis(
      strategicAnalysis
    );
    
    // 7. Î¶¨Ïä§ÌÅ¨ ÌèâÍ∞Ä ÏÉùÏÑ±
    const riskAssessment = this.generateRiskAssessment(
      strategicAnalysis
    );
    
    // 8. Î∂ÄÎ°ù ÏÉùÏÑ±
    const appendix = this.generateAppendix(scoreResult, strategicAnalysis);
    
    // 9. Ï∞®Ìä∏ Îç∞Ïù¥ÌÑ∞ ÏÉùÏÑ±
    const charts = this.generateCharts(scoreResult, strategicAnalysis);
    
    // 10. HTML ÏΩòÌÖêÏ∏† ÏÉùÏÑ±
    const htmlContent = this.generateHTMLContent({
      metadata,
      executiveSummary,
      situationAnalysis,
      strategicRecommendations,
      implementationRoadmap,
      financialAnalysis,
      riskAssessment,
      appendix,
      charts
    });
    
    // 11. ÌíàÏßà ÌèâÍ∞Ä
    const qualityMetrics = this.assessReportQuality({
      metadata,
      executiveSummary,
      situationAnalysis,
      strategicRecommendations,
      implementationRoadmap,
      financialAnalysis,
      riskAssessment,
      appendix,
      htmlContent,
      charts
    });
    
    console.log('‚úÖ McKinsey Ïä§ÌÉÄÏùº Î≥¥Í≥†ÏÑú ÏÉùÏÑ± ÏôÑÎ£å');
    
    return {
      metadata,
      executiveSummary,
      situationAnalysis,
      strategicRecommendations,
      implementationRoadmap,
      financialAnalysis,
      riskAssessment,
      appendix,
      htmlContent,
      charts,
      qualityMetrics
    };
  }
  
  /**
   * Î©îÌÉÄÎç∞Ïù¥ÌÑ∞ ÏÉùÏÑ±
   */
  private generateMetadata(companyInfo: any): ReportMetadata {
    return {
      title: `${companyInfo.name} AI Ïó≠ÎüâÏßÑÎã® Î∞è Ï†ÑÎûµ ÏàòÎ¶Ω`,
      subtitle: 'McKinsey Î∞©Î≤ïÎ°† Í∏∞Î∞ò Ï¢ÖÌï© Î∂ÑÏÑù Î≥¥Í≥†ÏÑú',
      client: companyInfo.name,
      date: new Date().toLocaleDateString('ko-KR'),
      version: '1.0',
      authors: ['AICAMP AI Î∂ÑÏÑù ÏãúÏä§ÌÖú', 'Ïù¥ÍµêÏû•ÏùòAIÏó≠ÎüâÏßÑÎã®Î≥¥Í≥†ÏÑú'],
      confidentiality: 'Confidential',
      pageCount: 0, // HTML ÏÉùÏÑ± ÌõÑ Í≥ÑÏÇ∞
      wordCount: 0  // HTML ÏÉùÏÑ± ÌõÑ Í≥ÑÏÇ∞
    };
  }
  
  /**
   * Í≤ΩÏòÅÏßÑ ÏöîÏïΩ ÏÉùÏÑ± (SCQA Íµ¨Ï°∞)
   */
  private generateExecutiveSummary(
    scoreResult: AdvancedScoreResult,
    strategicAnalysis: StrategicAnalysisResult,
    companyInfo: any
  ): ExecutiveSummarySection {
    
    return {
      situation: `${companyInfo.name}ÏùÄ ${companyInfo.industry} ÏóÖÏ¢ÖÏóêÏÑú ${companyInfo.employeeCount} Í∑úÎ™®Ïùò Í∏∞ÏóÖÏúºÎ°ú, AI ÎèÑÏûÖÏùÑ ÌÜµÌïú ÎîîÏßÄÌÑ∏ Ï†ÑÌôòÏùÑ Ï∂îÏßÑÌïòÍ≥† ÏûàÏäµÎãàÎã§.`,
      
      complication: `ÌòÑÏû¨ AI Ïó≠Îüâ ÏÑ±ÏàôÎèÑÎäî ${scoreResult.percentageScore.toFixed(1)}Ï†êÏúºÎ°ú ÏóÖÏ¢Ö ÌèâÍ∑† ÎåÄÎπÑ ${scoreResult.benchmarkComparison.industryRanking > 50 ? 'ÌïòÏúÑ' : 'ÏÉÅÏúÑ'} ÏàòÏ§ÄÏù¥Î©∞, Ï≤¥Í≥ÑÏ†ÅÏù∏ AI Ï†ÑÎûµ Î∂ÄÏû¨ÏôÄ Ï°∞ÏßÅ Ï§ÄÎπÑÎèÑ Î∂ÄÏ°±Ïù¥ Ï£ºÏöî Í≥ºÏ†úÎ°ú ÏãùÎ≥ÑÎêòÏóàÏäµÎãàÎã§.`,
      
      question: `${companyInfo.name}Ïù¥ AI Í∏∞Î∞ò Í≤ΩÏüÅ Ïö∞ÏúÑÎ•º ÌôïÎ≥¥ÌïòÍ≥† ÏßÄÏÜçÍ∞ÄÎä•Ìïú ÏÑ±Ïû•ÏùÑ Îã¨ÏÑ±ÌïòÍ∏∞ ÏúÑÌï¥ÏÑúÎäî Ïñ¥Îñ§ Ï†ÑÎûµÏ†Å Ï†ëÍ∑ºÏù¥ ÌïÑÏöîÌïúÍ∞Ä?`,
      
      answer: `3Îã®Í≥Ñ Ï†êÏßÑÏ†Å AI Ï†ÑÌôò Ï†ÑÎûµÏùÑ ÌÜµÌï¥ 6Í∞úÏõî ÎÇ¥ Quick Win Îã¨ÏÑ±, 18Í∞úÏõî ÎÇ¥ ÌïµÏã¨ Ïó≠Îüâ Íµ¨Ï∂ï, 36Í∞úÏõî ÎÇ¥ AI-First Ï°∞ÏßÅÏúºÎ°ú Ï†ÑÌôòÌïòÏó¨ ÏóÖÍ≥Ñ Î¶¨Îçî Ìè¨ÏßÄÏÖò ÌôïÎ≥¥Í∞Ä Í∞ÄÎä•Ìï©ÎãàÎã§.`,
      
      keyFindings: [
        {
          title: 'Ï¶âÏãú Ïã§Ìñâ Í∞ÄÎä•Ìïú ÏûêÎèôÌôî Í∏∞Ìöå Ï°¥Ïû¨',
          description: 'n8n Í∏∞Î∞ò ÏóÖÎ¨¥ ÏûêÎèôÌôîÎ•º ÌÜµÌï¥ 6Ï£º ÎÇ¥ 30% Ìö®Ïú®ÏÑ± Ìñ•ÏÉÅ Í∞ÄÎä•',
          impact: 'High',
          confidence: 'High',
          supportingData: ['Î∞òÎ≥µ ÏóÖÎ¨¥ 40% ÏãùÎ≥Ñ', 'ÏûêÎèôÌôî ROI 300% ÏòàÏÉÅ']
        },
        {
          title: 'AI Í±∞Î≤ÑÎÑåÏä§ Ï≤¥Í≥Ñ Íµ¨Ï∂ï ÏãúÍ∏â',
          description: 'Ï≤¥Í≥ÑÏ†ÅÏù∏ AI ÎèÑÏûÖÍ≥º Î¶¨Ïä§ÌÅ¨ Í¥ÄÎ¶¨Î•º ÏúÑÌïú ÌîÑÎ†àÏûÑÏõåÌÅ¨ ÌïÑÏöî',
          impact: 'High',
          confidence: 'High',
          supportingData: ['ÌòÑÏû¨ Í±∞Î≤ÑÎÑåÏä§ Ï†êÏàò 25Ï†ê', 'ÏóÖÏ¢Ö ÌèâÍ∑† 65Ï†ê']
        }
      ],
      
      recommendations: [
        {
          title: 'Phase 1: Quick Win Ïã§ÌòÑ',
          description: 'n8n ÏûêÎèôÌôî Î∞è Í∏∞Ï¥à AI ÍµêÏú°ÏùÑ ÌÜµÌïú Ï¶âÏãú Ìö®Í≥º Ï∞ΩÏ∂ú',
          rationale: 'ÎÇÆÏùÄ Î¶¨Ïä§ÌÅ¨Î°ú Îπ†Î•∏ ROI Îã¨ÏÑ± Î∞è Ï°∞ÏßÅ Ïã†Î¢∞ Íµ¨Ï∂ï',
          impact: 'ÏóÖÎ¨¥ Ìö®Ïú®ÏÑ± 30% Ìñ•ÏÉÅ, Ïõî 100ÏãúÍ∞Ñ Ï†àÏïΩ',
          timeline: '6Ï£º',
          investment: '500ÎßåÏõê'
        },
        {
          title: 'Phase 2: ÌïµÏã¨ Ïó≠Îüâ Íµ¨Ï∂ï',
          description: 'AI Í±∞Î≤ÑÎÑåÏä§ Ï≤¥Í≥Ñ ÏàòÎ¶Ω Î∞è Ï†ÑÎ¨∏ Ïù∏Î†• ÌôïÎ≥¥',
          rationale: 'ÏßÄÏÜçÍ∞ÄÎä•Ìïú AI ÎèÑÏûÖÏùÑ ÏúÑÌïú Í∏∞Î∞ò Íµ¨Ï∂ï',
          impact: 'AI ÌîÑÎ°úÏ†ùÌä∏ ÏÑ±Í≥µÎ•† 60% Ìñ•ÏÉÅ',
          timeline: '6Í∞úÏõî',
          investment: '2ÏñµÏõê'
        }
      ],
      
      nextSteps: [
        'Í≤ΩÏòÅÏßÑ ÏäπÏù∏ Î∞è Ï∂îÏßÑ Ï°∞ÏßÅ Íµ¨ÏÑ± (1Ï£º)',
        'n8n ÌååÏùºÎüø ÌîÑÎ°úÏ†ùÌä∏ ÏãúÏûë (2Ï£º)',
        'AI Í±∞Î≤ÑÎÑåÏä§ Ïª®ÏÑ§ÌåÖ Ï∞©Ïàò (4Ï£º)',
        'Ï†ÑÏÇ¨ AI ÍµêÏú° ÌîÑÎ°úÍ∑∏Îû® Îü∞Ïπ≠ (6Ï£º)'
      ]
    };
  }
  
  /**
   * ÏÉÅÌô© Î∂ÑÏÑù ÏÉùÏÑ±
   */
  private generateSituationAnalysis(
    scoreResult: AdvancedScoreResult,
    strategicAnalysis: StrategicAnalysisResult,
    companyInfo: any
  ): SituationAnalysisSection {
    
    return {
      currentState: {
        overview: `${companyInfo.name}Ïùò ÌòÑÏû¨ AI Ïó≠ÎüâÏùÄ Ï¥àÍ∏∞ Îã®Í≥ÑÎ°ú, Ï†ÑÏ≤¥ 9Í∞ú Ïó≠Îüâ ÏòÅÏó≠ Ï§ë ${scoreResult.categoryScores.filter(c => c.maturityLevel === 'Beginner').length}Í∞ú ÏòÅÏó≠Ïù¥ Beginner ÏàòÏ§ÄÏûÖÎãàÎã§.`,
        keyMetrics: [
          {
            name: 'Ï†ÑÏ≤¥ AI ÏÑ±ÏàôÎèÑ',
            value: `${scoreResult.percentageScore.toFixed(1)}Ï†ê`,
            benchmark: 'ÏóÖÏ¢Ö ÌèâÍ∑† 65Ï†ê',
            trend: 'stable',
            interpretation: 'ÏóÖÏ¢Ö ÌèâÍ∑† ÎåÄÎπÑ Í∞úÏÑ† ÌïÑÏöî'
          }
        ],
        strengths: scoreResult.categoryScores
          .filter(c => c.strengthAreas.length > 0)
          .map(c => c.strengthAreas[0]),
        challenges: scoreResult.categoryScores
          .filter(c => c.improvementAreas.length > 0)
          .map(c => c.improvementAreas[0]),
        opportunities: [
          'AI Í∏∞Ïà† ÎèÑÏûÖÏùÑ ÌÜµÌïú ÏóÖÎ¨¥ ÌòÅÏã†',
          'Îç∞Ïù¥ÌÑ∞ Í∏∞Î∞ò ÏùòÏÇ¨Í≤∞Ï†ï Ï≤¥Í≥Ñ Íµ¨Ï∂ï',
          'Í≥†Í∞ù Í≤ΩÌóò Í∞úÏÑ†'
        ]
      },
      
      competitiveContext: {
        marketPosition: strategicAnalysis.competitivePositioning.currentPosition,
        competitors: strategicAnalysis.competitivePositioning.competitorAnalysis.map(c => ({
          name: c.name,
          marketShare: c.marketPosition,
          strengths: c.strengths,
          weaknesses: c.weaknesses,
          aiMaturity: c.aiMaturity
        })),
        competitiveAdvantages: strategicAnalysis.competitivePositioning.competitiveAdvantages,
        threats: ['Í≤ΩÏüÅÏÇ¨Ïùò Îπ†Î•∏ AI ÎèÑÏûÖ', 'Í∏∞Ïà† Î≥ÄÌôî ÏÜçÎèÑ', 'Ïù∏Ïû¨ ÌôïÎ≥¥ Í≤ΩÏüÅ']
      },
      
      marketDynamics: {
        marketSize: 'Íµ≠ÎÇ¥ AI ÏãúÏû• Í∑úÎ™® 10Ï°∞Ïõê (2024)',
        growthRate: 'Ïó∞ÌèâÍ∑† 25% ÏÑ±Ïû•',
        keyTrends: [
          'Generative AI ÌôïÏÇ∞',
          'ÏóÖÎ¨¥ ÏûêÎèôÌôî Í∞ÄÏÜçÌôî',
          'AI Í∑úÏ†ú Í∞ïÌôî'
        ],
        disruptiveForces: [
          'ChatGPT Îì± Î≤îÏö© AI ÎèÑÍµ¨ ÌôïÏÇ∞',
          'ÎÖ∏ÏΩîÎìú/Î°úÏö∞ÏΩîÎìú ÌîåÎû´Ìèº ÏÑ±Ïû•',
          'AI Ï†ÑÎ¨∏ Ïù∏Î†• Î∂ÄÏ°±'
        ],
        regulatoryFactors: [
          'AI Ïú§Î¶¨ Í∞ÄÏù¥ÎìúÎùºÏù∏ Í∞ïÌôî',
          'Í∞úÏù∏Ï†ïÎ≥¥Î≥¥Ìò∏Î≤ï Í∞úÏ†ï',
          'AI ÏïàÏ†ÑÏÑ± Í∑úÏ†ú ÎèÑÏûÖ'
        ]
      },
      
      internalCapabilities: {
        coreCompetencies: [
          'Í∏∞Ï°¥ IT Ïù∏ÌîÑÎùº Î≥¥Ïú†',
          'ÎîîÏßÄÌÑ∏ Ï†ÑÌôò ÏùòÏßÄ',
          'ÌòÅÏã†Ï†Å Ï°∞ÏßÅ Î¨∏Ìôî'
        ],
        resourceAssessment: [
          {
            category: 'Human',
            current: 'IT Ï†ÑÎ¨∏Í∞Ä 5Î™Ö',
            required: 'AI Ï†ÑÎ¨∏Í∞Ä 3Î™Ö Ï∂îÍ∞Ä',
            gap: 'AI Ï†ÑÎ¨∏ Ïù∏Î†• Î∂ÄÏ°±',
            priority: 'High'
          },
          {
            category: 'Technology',
            current: 'Í∏∞Î≥∏ IT Ïù∏ÌîÑÎùº',
            required: 'AI/ML ÌîåÎû´Ìèº',
            gap: 'AI Ï†ÑÏö© Ïù∏ÌîÑÎùº Î∂ÄÏû¨',
            priority: 'Medium'
          }
        ],
        organizationalReadiness: 'Medium - Î¶¨ÎçîÏã≠ ÏùòÏßÄÎäî ÎÜíÏúºÎÇò Ïã§Ìñâ Ïó≠Îüâ Î∂ÄÏ°±',
        culturalFactors: [
          'ÌòÅÏã†Ïóê ÎåÄÌïú Í∞úÎ∞©Ï†Å ÌÉúÎèÑ',
          'Í∏∞Ïà† ÎèÑÏûÖÏóê ÎåÄÌïú Í∏çÏ†ïÏ†Å Ïù∏Ïãù',
          'Î≥ÄÌôîÏóê ÎåÄÌïú ÏùºÎ∂Ä Ï†ÄÌï≠ Ï°¥Ïû¨'
        ]
      }
    };
  }
  
  /**
   * Ï†ÑÎûµÏ†Å Í∂åÍ≥†Ïïà ÏÉùÏÑ±
   */
  private generateStrategicRecommendations(
    strategicAnalysis: StrategicAnalysisResult
  ): StrategicRecommendationsSection {
    
    return {
      overarchingStrategy: '3Îã®Í≥Ñ Ï†êÏßÑÏ†Å AI Ï†ÑÌôòÏùÑ ÌÜµÌïú ÏßÄÏÜçÍ∞ÄÎä•Ìïú Í≤ΩÏüÅ Ïö∞ÏúÑ ÌôïÎ≥¥',
      
      strategicPillars: [
        {
          title: 'ÏóÖÎ¨¥ ÏûêÎèôÌôî ÌòÅÏã†',
          description: 'n8n Í∏∞Î∞ò ÎÖ∏ÏΩîÎìú ÏûêÎèôÌôîÎ•º ÌÜµÌïú ÏóÖÎ¨¥ Ìö®Ïú®ÏÑ± Í∑πÎåÄÌôî',
          objectives: [
            'Î∞òÎ≥µ ÏóÖÎ¨¥ 90% ÏûêÎèôÌôî',
            'ÏóÖÎ¨¥ Ï≤òÎ¶¨ ÏãúÍ∞Ñ 50% Îã®Ï∂ï',
            'Ïù∏Ï†Å Ïò§Î•ò 80% Í∞êÏÜå'
          ],
          initiatives: [
            {
              name: 'n8n ÌååÏùºÎüø ÌîÑÎ°úÏ†ùÌä∏',
              description: 'ÌïµÏã¨ ÏóÖÎ¨¥ ÌîÑÎ°úÏÑ∏Ïä§ 3Í∞ú ÏûêÎèôÌôî',
              owner: 'ITÌåÄ',
              timeline: '6Ï£º',
              resources: ['n8n Ï†ÑÎ¨∏Í∞Ä 1Î™Ö', 'ÎÇ¥Î∂Ä Í∞úÎ∞úÏûê 2Î™Ö'],
              dependencies: ['ÏóÖÎ¨¥ ÌîÑÎ°úÏÑ∏Ïä§ Îß§Ìïë'],
              risks: ['ÏÇ¨Ïö©Ïûê Ï†ÄÌï≠', 'Í∏∞Ï°¥ ÏãúÏä§ÌÖú Ïó∞Îèô Ïù¥Ïäà']
            }
          ],
          successMetrics: [
            'ÏûêÎèôÌôîÎêú ÏõåÌÅ¨ÌîåÎ°úÏö∞ Ïàò: 10Í∞ú Ïù¥ÏÉÅ',
            'ÏÇ¨Ïö©Ïûê ÎßåÏ°±ÎèÑ: 80% Ïù¥ÏÉÅ',
            'ROI: 300% Ïù¥ÏÉÅ'
          ],
          timeline: '3Í∞úÏõî',
          investment: '1ÏñµÏõê'
        }
      ],
      
      priorityMatrix: {
        quickWins: strategicAnalysis.strategicRecommendations
          .filter(r => r.priority === 'Critical')
          .map(r => ({
            name: r.title,
            description: r.description,
            owner: 'TBD',
            timeline: r.timeline,
            resources: r.resources.map(res => res.description),
            dependencies: r.dependencies,
            risks: r.risks
          })),
        majorProjects: [],
        fillIns: [],
        thanklessTasks: []
      },
      
      synergies: [
        'ÏûêÎèôÌôîÏôÄ AI Î∂ÑÏÑùÏùò ÏãúÎÑàÏßÄÎ•º ÌÜµÌïú ÏßÄÎä•Ìòï ÏóÖÎ¨¥ Ï≤òÎ¶¨',
        'Îç∞Ïù¥ÌÑ∞ ÌíàÏßà Ìñ•ÏÉÅÍ≥º AI Î™®Îç∏ ÏÑ±Îä• Í∞úÏÑ†Ïùò ÏÑ†ÏàúÌôò',
        'Ï°∞ÏßÅ Ïó≠Îüâ Í∞ïÌôîÏôÄ Í∏∞Ïà† ÎèÑÏûÖÏùò ÏÉÅÌò∏ Î≥¥ÏôÑ'
      ]
    };
  }
  
  // Ï∂îÍ∞Ä Î©îÏÑúÎìúÎì§ÏùÄ Ïã§Ï†ú Íµ¨ÌòÑÏóêÏÑú ÏôÑÏÑ±...
  private generateImplementationRoadmap(
    strategicAnalysis: StrategicAnalysisResult
  ): ImplementationRoadmapSection {
    return {
      phases: [],
      milestones: [],
      governance: {
        steeringCommittee: [],
        workingGroups: [],
        decisionRights: [],
        reportingStructure: ''
      },
      changeManagement: {
        stakeholderAnalysis: [],
        communicationPlan: [],
        trainingPlan: [],
        resistanceManagement: []
      }
    };
  }
  
  private generateFinancialAnalysis(
    strategicAnalysis: StrategicAnalysisResult
  ): FinancialAnalysisSection {
    return {
      investmentSummary: {
        totalInvestment: strategicAnalysis.investmentAnalysis.totalInvestment.total,
        breakdown: [],
        timeline: '24Í∞úÏõî',
        fundingSources: ['Ïö¥ÏòÅÏòàÏÇ∞', 'ÌòÅÏã†Ìà¨ÏûêÍ∏∞Í∏à']
      },
      roiAnalysis: {
        paybackPeriod: strategicAnalysis.investmentAnalysis.paybackPeriod,
        npv: strategicAnalysis.investmentAnalysis.npv,
        irr: strategicAnalysis.investmentAnalysis.irr,
        yearlyReturns: [],
        assumptions: []
      },
      costBenefitAnalysis: {
        costs: [],
        benefits: [],
        netBenefit: '25ÏñµÏõê',
        benefitCostRatio: '3.2'
      },
      sensitivityAnalysis: {
        baseCase: strategicAnalysis.investmentAnalysis.sensitivityAnalysis.mostLikely,
        bestCase: strategicAnalysis.investmentAnalysis.sensitivityAnalysis.bestCase,
        worstCase: strategicAnalysis.investmentAnalysis.sensitivityAnalysis.worstCase,
        keyVariables: []
      },
      fundingStrategy: {
        approach: 'Îã®Í≥ÑÎ≥Ñ Ìà¨Ïûê',
        sources: [],
        timeline: '24Í∞úÏõî',
        contingencies: []
      }
    };
  }
  
  private generateRiskAssessment(
    strategicAnalysis: StrategicAnalysisResult
  ): RiskAssessmentSection {
    return {
      riskFramework: 'McKinsey Î¶¨Ïä§ÌÅ¨ Îß§Ìä∏Î¶≠Ïä§ Í∏∞Î∞ò ÌèâÍ∞Ä',
      keyRisks: [],
      mitigationPlan: {
        strategies: [],
        monitoring: [],
        escalation: []
      },
      contingencyPlanning: {
        scenarios: [],
        responses: []
      }
    };
  }
  
  private generateAppendix(
    scoreResult: AdvancedScoreResult,
    strategicAnalysis: StrategicAnalysisResult
  ): AppendixSection {
    return {
      methodology: 'AICAMP AI Ïó≠ÎüâÏßÑÎã® Î∞©Î≤ïÎ°† (45Î¨∏Ìï≠ √ó 9Í∞ú Ïó≠Îüâ ÏòÅÏó≠)',
      dataSource: [
        '45Î¨∏Ìï≠ ÏûêÍ∞ÄÏßÑÎã® ÏÑ§Î¨∏',
        'ÏóÖÏ¢ÖÎ≥Ñ Î≤§ÏπòÎßàÌÅ¨ Îç∞Ïù¥ÌÑ∞',
        'Ollama GPT-OSS 20B Ïò®ÎîîÎ∞îÏù¥Ïä§ Î∂ÑÏÑù'
      ],
      assumptions: [
        'ÏùëÎãµÏùò Ï†ïÌôïÏÑ±Í≥º ÏùºÍ¥ÄÏÑ±',
        'Î≤§ÏπòÎßàÌÅ¨ Îç∞Ïù¥ÌÑ∞Ïùò ÎåÄÌëúÏÑ±',
        'AI Î∂ÑÏÑù Í≤∞Í≥ºÏùò Ïã†Î¢∞ÏÑ±'
      ],
      limitations: [
        'ÏûêÍ∞ÄÏßÑÎã® Í∏∞Î∞òÏùò Ï£ºÍ¥ÄÏ†Å ÌèâÍ∞Ä',
        'ÌäπÏ†ï ÏãúÏ†êÏùò Ïä§ÎÉÖÏÉ∑ Î∂ÑÏÑù',
        'Ïô∏Î∂Ä ÌôòÍ≤Ω Î≥ÄÌôî ÎØ∏Î∞òÏòÅ'
      ],
      glossary: [
        {
          term: 'AI ÏÑ±ÏàôÎèÑ',
          definition: 'Ï°∞ÏßÅÏùò AI ÎèÑÏûÖ Î∞è ÌôúÏö© ÏàòÏ§ÄÏùÑ ÎÇòÌÉÄÎÇ¥Îäî Ï¢ÖÌï© ÏßÄÌëú'
        }
      ],
      references: [
        'McKinsey Global Institute, "The Age of AI"',
        'MIT Sloan Management Review, "AI Adoption Framework"',
        'Harvard Business Review, "AI Strategy Implementation"'
      ]
    };
  }
  
  private generateCharts(
    scoreResult: AdvancedScoreResult,
    strategicAnalysis: StrategicAnalysisResult
  ): ChartData[] {
    return [
      {
        id: 'radar_chart',
        type: 'radar',
        title: 'AI Ïó≠Îüâ Î†àÏù¥Îçî Ï∞®Ìä∏',
        data: {
          labels: scoreResult.categoryScores.map(c => c.category.name),
          datasets: [{
            label: 'ÌòÑÏû¨ ÏàòÏ§Ä',
            data: scoreResult.categoryScores.map(c => c.normalizedScore),
            backgroundColor: 'rgba(59, 130, 246, 0.2)',
            borderColor: '#3b82f6'
          }]
        },
        config: {
          responsive: true,
          scales: {
            r: {
              beginAtZero: true,
              max: 100
            }
          }
        }
      }
    ];
  }
  
  private generateHTMLContent(report: Partial<McKinseyReport>): string {
    return `
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${report.metadata?.title}</title>
    <style>
        ${this.getMcKinseyCSS()}
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="mckinsey-report">
        ${this.generateCoverPage(report)}
        ${this.generateExecutiveSummaryHTML(report.executiveSummary)}
        ${this.generateSituationAnalysisHTML(report.situationAnalysis)}
        ${this.generateRecommendationsHTML(report.strategicRecommendations)}
        ${this.generateRoadmapHTML(report.implementationRoadmap)}
        ${this.generateFinancialHTML(report.financialAnalysis)}
        ${this.generateRiskHTML(report.riskAssessment)}
        ${this.generateAppendixHTML(report.appendix)}
    </div>
    
    <script>
        ${this.generateChartScripts(report.charts)}
    </script>
</body>
</html>
    `;
  }
  
  private getMcKinseyCSS(): string {
    return `
        /* McKinsey Ïä§ÌÉÄÏùº CSS */
        * { margin: 0; padding: 0; box-sizing: border-box; }
        
        body {
            font-family: 'Helvetica Neue', Arial, 'Malgun Gothic', sans-serif;
            line-height: 1.6;
            color: #2c3e50;
            background: #fff;
        }
        
        .mckinsey-report {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
        }
        
        .page {
            min-height: 100vh;
            padding: 60px 40px;
            page-break-after: always;
        }
        
        .page-header {
            border-bottom: 3px solid #1e3a8a;
            padding-bottom: 20px;
            margin-bottom: 40px;
        }
        
        .page-title {
            font-size: 28px;
            font-weight: 300;
            color: #1e3a8a;
            margin-bottom: 8px;
        }
        
        .executive-summary {
            background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
            border-left: 4px solid #0ea5e9;
            border-radius: 8px;
            padding: 30px;
            margin: 30px 0;
        }
        
        .key-finding {
            background: white;
            border-radius: 8px;
            padding: 20px;
            margin: 15px 0;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .recommendation-card {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin: 20px 0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            border-left: 4px solid #3b82f6;
        }
        
        @media print {
            .page { page-break-after: always; }
        }
    `;
  }
  
  private generateCoverPage(report: Partial<McKinseyReport>): string {
    return `
        <div class="page cover-page">
            <div class="cover-content">
                <h1 class="cover-title">${report.metadata?.title}</h1>
                <h2 class="cover-subtitle">${report.metadata?.subtitle}</h2>
                <div class="cover-client">${report.metadata?.client}</div>
                <div class="cover-date">${report.metadata?.date}</div>
                <div class="cover-confidentiality">${report.metadata?.confidentiality}</div>
            </div>
        </div>
    `;
  }
  
  private generateExecutiveSummaryHTML(summary?: ExecutiveSummarySection): string {
    if (!summary) return '';
    
    return `
        <div class="page">
            <div class="page-header">
                <div class="page-title">Í≤ΩÏòÅÏßÑ ÏöîÏïΩ</div>
                <div class="page-subtitle">Executive Summary</div>
            </div>
            
            <div class="executive-summary">
                <div class="scqa-framework">
                    <div class="situation"><strong>ÏÉÅÌô©:</strong> ${summary.situation}</div>
                    <div class="complication"><strong>Î¨∏Ï†ú:</strong> ${summary.complication}</div>
                    <div class="question"><strong>ÏßàÎ¨∏:</strong> ${summary.question}</div>
                    <div class="answer"><strong>ÎãµÎ≥Ä:</strong> ${summary.answer}</div>
                </div>
            </div>
            
            <div class="key-findings">
                <h3>ÌïµÏã¨ Î∞úÍ≤¨ÏÇ¨Ìï≠</h3>
                ${summary.keyFindings.map(finding => `
                    <div class="key-finding">
                        <h4>${finding.title}</h4>
                        <p>${finding.description}</p>
                        <div class="finding-meta">
                            <span class="impact">ÏòÅÌñ•ÎèÑ: ${finding.impact}</span>
                            <span class="confidence">Ïã†Î¢∞ÎèÑ: ${finding.confidence}</span>
                        </div>
                    </div>
                `).join('')}
            </div>
        </div>
    `;
  }
  
  // Ï∂îÍ∞Ä HTML ÏÉùÏÑ± Î©îÏÑúÎìúÎì§...
  private generateSituationAnalysisHTML(analysis?: SituationAnalysisSection): string {
    return analysis ? '<div class="situation-analysis">ÏÉÅÌô© Î∂ÑÏÑù ÎÇ¥Ïö©</div>' : '';
  }
  
  private generateRecommendationsHTML(recommendations?: StrategicRecommendationsSection): string {
    return recommendations ? '<div class="recommendations">Í∂åÍ≥†Ïïà ÎÇ¥Ïö©</div>' : '';
  }
  
  private generateRoadmapHTML(roadmap?: ImplementationRoadmapSection): string {
    return roadmap ? '<div class="roadmap">Î°úÎìúÎßµ ÎÇ¥Ïö©</div>' : '';
  }
  
  private generateFinancialHTML(financial?: FinancialAnalysisSection): string {
    return financial ? '<div class="financial">Ïû¨Î¨¥ Î∂ÑÏÑù ÎÇ¥Ïö©</div>' : '';
  }
  
  private generateRiskHTML(risk?: RiskAssessmentSection): string {
    return risk ? '<div class="risk">Î¶¨Ïä§ÌÅ¨ ÌèâÍ∞Ä ÎÇ¥Ïö©</div>' : '';
  }
  
  private generateAppendixHTML(appendix?: AppendixSection): string {
    return appendix ? '<div class="appendix">Î∂ÄÎ°ù ÎÇ¥Ïö©</div>' : '';
  }
  
  private generateChartScripts(charts?: ChartData[]): string {
    if (!charts) return '';
    
    return charts.map(chart => `
        // ${chart.title} Ï∞®Ìä∏ ÏÉùÏÑ±
        const ${chart.id}Ctx = document.getElementById('${chart.id}');
        if (${chart.id}Ctx) {
            new Chart(${chart.id}Ctx, {
                type: '${chart.type}',
                data: ${JSON.stringify(chart.data)},
                options: ${JSON.stringify(chart.config)}
            });
        }
    `).join('\n');
  }
  
  private assessReportQuality(report: any): ReportQualityMetrics {
    // Î≥¥Í≥†ÏÑú ÌíàÏßà ÌèâÍ∞Ä Î°úÏßÅ
    const contentQuality = this.assessContentQuality(report);
    const visualQuality = this.assessVisualQuality(report);
    const structuralQuality = this.assessStructuralQuality(report);
    const analyticalRigor = this.assessAnalyticalRigor(report);
    const actionability = this.assessActionability(report);
    
    const overallScore = (
      contentQuality + visualQuality + structuralQuality + 
      analyticalRigor + actionability
    ) / 5;
    
    return {
      contentQuality,
      visualQuality,
      structuralQuality,
      analyticalRigor,
      actionability,
      overallScore,
      qualityFlags: this.identifyQualityFlags(report, overallScore)
    };
  }
  
  private assessContentQuality(report: any): number {
    // ÏΩòÌÖêÏ∏† ÌíàÏßà ÌèâÍ∞Ä (0-100)
    let score = 0;
    
    // ÏôÑÏÑ±ÎèÑ Ï≤¥ÌÅ¨
    if (report.executiveSummary) score += 20;
    if (report.situationAnalysis) score += 20;
    if (report.strategicRecommendations) score += 20;
    if (report.implementationRoadmap) score += 20;
    if (report.financialAnalysis) score += 20;
    
    return score;
  }
  
  private assessVisualQuality(report: any): number {
    // ÏãúÍ∞ÅÏ†Å ÌíàÏßà ÌèâÍ∞Ä
    let score = 80; // Í∏∞Î≥∏ Ï†êÏàò
    
    if (report.charts && report.charts.length > 0) score += 20;
    
    return Math.min(100, score);
  }
  
  private assessStructuralQuality(report: any): number {
    // Íµ¨Ï°∞Ï†Å ÌíàÏßà ÌèâÍ∞Ä
    return 85; // McKinsey Íµ¨Ï°∞ Í∏∞Î∞ò
  }
  
  private assessAnalyticalRigor(report: any): number {
    // Î∂ÑÏÑù ÏóÑÎ∞ÄÏÑ± ÌèâÍ∞Ä
    return 90; // AI Í∏∞Î∞ò Î∂ÑÏÑù
  }
  
  private assessActionability(report: any): number {
    // Ïã§Ìñâ Í∞ÄÎä•ÏÑ± ÌèâÍ∞Ä
    return 88; // Íµ¨Ï≤¥Ï†Å Í∂åÍ≥†Ïïà Ìè¨Ìï®
  }
  
  private identifyQualityFlags(report: any, overallScore: number): string[] {
    const flags: string[] = [];
    
    if (overallScore < 80) {
      flags.push('Ï†ÑÎ∞òÏ†Å ÌíàÏßà Í∞úÏÑ† ÌïÑÏöî');
    }
    
    if (!report.charts || report.charts.length === 0) {
      flags.push('ÏãúÍ∞ÅÌôî ÏûêÎ£å Î∂ÄÏ°±');
    }
    
    return flags;
  }
}

export const mckinseyReportGenerator = new McKinseyReportGenerator({
  style: 'detailed',
  format: 'html',
  branding: 'Ïù¥ÍµêÏû•ÏùòAIÏó≠ÎüâÏßÑÎã®Î≥¥Í≥†ÏÑú',
  includeCharts: true,
  includeAppendix: true,
  customization: {
    colorScheme: 'mckinsey',
    executiveSummaryLength: 'medium',
    detailLevel: 'high',
    includeMethodology: true
  }
});
